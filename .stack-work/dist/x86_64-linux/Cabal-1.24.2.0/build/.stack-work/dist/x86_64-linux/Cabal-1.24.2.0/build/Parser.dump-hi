
==================== FINAL INTERFACE ====================
2018-06-09 19:11:46.892052 UTC

interface HaskellCircuits-0.1.0.0-3mIW93ol3alH6nhlDJ7Hzo:Parser [orphan module] 8002
  interface hash: c0ad5538e89e2993cef085d5cfeb9d66
  ABI hash: f25442964b616089abfc3d7b05acabc3
  export-list hash: 518f87c40b39394a3af3d07ea4f63fc3
  orphan hash: 6623cfdb0a017a2ab5e809e253028e99
  flag hash: b29423bd16c28c976504072290399d56
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parser.happyAccept
  Parser.happyActOffsets
  Parser.happyCheck
  Parser.happyDefActions
  Parser.happyDoAction
  Parser.happyDoSeq
  Parser.happyDontSeq
  Parser.happyDrop
  Parser.happyDropStk
  Parser.happyError'
  Parser.happyError_
  Parser.happyFail
  Parser.happyGoto
  Parser.happyGotoOffsets
  Parser.happyIn10
  Parser.happyIn11
  Parser.happyIn12
  Parser.happyIn13
  Parser.happyIn14
  Parser.happyIn15
  Parser.happyIn16
  Parser.happyIn17
  Parser.happyIn18
  Parser.happyIn19
  Parser.happyIn20
  Parser.happyIn21
  Parser.happyIn22
  Parser.happyIn23
  Parser.happyIn24
  Parser.happyIn25
  Parser.happyIn26
  Parser.happyIn27
  Parser.happyIn28
  Parser.happyIn4
  Parser.happyIn5
  Parser.happyIn6
  Parser.happyIn7
  Parser.happyIn8
  Parser.happyIn9
  Parser.happyInTok
  Parser.happyMonad2Reduce
  Parser.happyMonadReduce
  Parser.happyNewToken
  Parser.happyOut10
  Parser.happyOut11
  Parser.happyOut12
  Parser.happyOut13
  Parser.happyOut14
  Parser.happyOut15
  Parser.happyOut16
  Parser.happyOut17
  Parser.happyOut18
  Parser.happyOut19
  Parser.happyOut20
  Parser.happyOut21
  Parser.happyOut22
  Parser.happyOut23
  Parser.happyOut24
  Parser.happyOut25
  Parser.happyOut26
  Parser.happyOut27
  Parser.happyOut28
  Parser.happyOut4
  Parser.happyOut5
  Parser.happyOut6
  Parser.happyOut7
  Parser.happyOut8
  Parser.happyOut9
  Parser.happyOutTok
  Parser.happyParse
  Parser.happyReduce
  Parser.happyReduceArr
  Parser.happyReduce_1
  Parser.happyReduce_10
  Parser.happyReduce_11
  Parser.happyReduce_12
  Parser.happyReduce_13
  Parser.happyReduce_14
  Parser.happyReduce_15
  Parser.happyReduce_16
  Parser.happyReduce_17
  Parser.happyReduce_18
  Parser.happyReduce_19
  Parser.happyReduce_2
  Parser.happyReduce_20
  Parser.happyReduce_21
  Parser.happyReduce_22
  Parser.happyReduce_23
  Parser.happyReduce_24
  Parser.happyReduce_25
  Parser.happyReduce_26
  Parser.happyReduce_27
  Parser.happyReduce_28
  Parser.happyReduce_29
  Parser.happyReduce_3
  Parser.happyReduce_30
  Parser.happyReduce_31
  Parser.happyReduce_32
  Parser.happyReduce_33
  Parser.happyReduce_34
  Parser.happyReduce_35
  Parser.happyReduce_36
  Parser.happyReduce_37
  Parser.happyReduce_38
  Parser.happyReduce_39
  Parser.happyReduce_4
  Parser.happyReduce_40
  Parser.happyReduce_41
  Parser.happyReduce_42
  Parser.happyReduce_43
  Parser.happyReduce_44
  Parser.happyReduce_45
  Parser.happyReduce_46
  Parser.happyReduce_47
  Parser.happyReduce_48
  Parser.happyReduce_49
  Parser.happyReduce_5
  Parser.happyReduce_50
  Parser.happyReduce_51
  Parser.happyReduce_52
  Parser.happyReduce_53
  Parser.happyReduce_54
  Parser.happyReduce_55
  Parser.happyReduce_56
  Parser.happyReduce_57
  Parser.happyReduce_58
  Parser.happyReduce_59
  Parser.happyReduce_6
  Parser.happyReduce_60
  Parser.happyReduce_61
  Parser.happyReduce_62
  Parser.happyReduce_63
  Parser.happyReduce_64
  Parser.happyReduce_65
  Parser.happyReduce_66
  Parser.happyReduce_67
  Parser.happyReduce_7
  Parser.happyReduce_8
  Parser.happyReduce_9
  Parser.happyReduction_1
  Parser.happyReduction_10
  Parser.happyReduction_11
  Parser.happyReduction_12
  Parser.happyReduction_13
  Parser.happyReduction_14
  Parser.happyReduction_15
  Parser.happyReduction_16
  Parser.happyReduction_17
  Parser.happyReduction_18
  Parser.happyReduction_19
  Parser.happyReduction_2
  Parser.happyReduction_20
  Parser.happyReduction_21
  Parser.happyReduction_22
  Parser.happyReduction_23
  Parser.happyReduction_24
  Parser.happyReduction_25
  Parser.happyReduction_26
  Parser.happyReduction_27
  Parser.happyReduction_28
  Parser.happyReduction_29
  Parser.happyReduction_3
  Parser.happyReduction_30
  Parser.happyReduction_31
  Parser.happyReduction_32
  Parser.happyReduction_33
  Parser.happyReduction_34
  Parser.happyReduction_35
  Parser.happyReduction_36
  Parser.happyReduction_37
  Parser.happyReduction_38
  Parser.happyReduction_39
  Parser.happyReduction_4
  Parser.happyReduction_40
  Parser.happyReduction_41
  Parser.happyReduction_42
  Parser.happyReduction_43
  Parser.happyReduction_44
  Parser.happyReduction_45
  Parser.happyReduction_46
  Parser.happyReduction_47
  Parser.happyReduction_48
  Parser.happyReduction_49
  Parser.happyReduction_5
  Parser.happyReduction_50
  Parser.happyReduction_51
  Parser.happyReduction_52
  Parser.happyReduction_53
  Parser.happyReduction_54
  Parser.happyReduction_55
  Parser.happyReduction_56
  Parser.happyReduction_57
  Parser.happyReduction_58
  Parser.happyReduction_59
  Parser.happyReduction_6
  Parser.happyReduction_60
  Parser.happyReduction_61
  Parser.happyReduction_62
  Parser.happyReduction_63
  Parser.happyReduction_64
  Parser.happyReduction_65
  Parser.happyReduction_66
  Parser.happyReduction_67
  Parser.happyReduction_7
  Parser.happyReduction_8
  Parser.happyReduction_9
  Parser.happyReturn
  Parser.happyReturn1
  Parser.happySeq
  Parser.happyShift
  Parser.happySpecReduce_0
  Parser.happySpecReduce_1
  Parser.happySpecReduce_2
  Parser.happySpecReduce_3
  Parser.happyTable
  Parser.happyTcHack
  Parser.happyThen
  Parser.happyThen1
  Parser.happy_n_nonterms
  Parser.happy_n_terms
  Parser.indexShortOffAddr
  Parser.left
  Parser.notHappyAtAll
  Parser.parse
  Parser.parse'
  Parser.parseError
  Parser.programParser
  Parser.r
  Parser.runP
  Parser.runPWithoutError
  Parser.HappyAbsSyn{Parser.HappyAbsSyn}
  Parser.HappyAddr{Parser.HappyA#}
  Parser.HappyAny
  Parser.HappyStk{Parser.HappyStk}
  Parser.Happy_IntList{Parser.HappyCons}
  Parser.P
  Parser.P2Result{Parser.P2Result}
  Parser.PConstr{Parser.PConstr}
  Parser.PDecl{Parser.PDataType Parser.PFType Parser.PFunc}
  Parser.PExpr{Parser.PAExpr Parser.PApp}
  Parser.PFType{Parser.PTAExpr Parser.PTApp Parser.PTArrow}
  Parser.PGuards{Parser.PGuards Parser.PNoGuards}
  Parser.PState{Parser.NoState}
  Parser.Pat{Parser.ConsPat Parser.Pat}
module dependencies: Lexer
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  Lexer c6174f684585218aa184faedf4ab7f58
  exports: c0fea5fa50c83f412bfcd8243e0a6172
  Arrow 0b0f9dc93b0d9d0895f6a1687956b32b
  Bin 1f25e29df2873757e51103aa7c29951d
  Colon efa1223b6478e5118574bdefb52f1c55
  Data 494d83a006cee6f3a88790ff16a96c68
  Dec 8b0f2277218f753a903427d84acf225f
  EOF d7029809bbbdee5a2a25ddfc2914f772
  Equal d3d548d11a0d00d6eb9f33e70855fbf3
  Hex 48ae9fca0c791aa2ab7be7a483770cf8
  L aeabd488767cc0257d48246b31a3c8eb
  L b349f6a51d347de013d5c5d3a0eb3033
  LParen 80391272bf09b1cd0e37ff4f3eb686dd
  LToken fd141e29e5214152a04ab8dbc6cb5857
  Low a60819b3a41da7c3fbdecdba34a169db
  NoLoc 1192b825a1bbdd5c089dbb8aeba295bc
  Pipe 20ab4293d0c46f9a1f767cebfe7e1619
  RParen bba8ba52d7b2cce6be2e76beeea3165d
  Semic 61bfbbffbc1d55394c6702f30f0c3a47
  SrcLoc 510a640ddf88b20ff6b6951a0336b818
  TwoColons 615190bc516779e7c917f57b14aa17f3
  Upp 894a86340c775c101c75dc2b77ce46e2
  catchEither c5e0d83f1eb0b0c62ad23712805e5b6a
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array 01310623526f8acc73d1bb69e9d9530a
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Arr dbae05e7a9c0aba55cc706ecf0406507
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Exts 26da1d42716da321d2d8df514b70012a
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy 371607e50dde46b5f4103b3ab334a497
addDependentFile "/home/luiz/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
fixities infixr 9 HappyStk, infixr 9 HappyStk
5f669afa17998ef27069f6cdbcba2f09
  $fEqL :: forall a. GHC.Classes.Eq a => GHC.Classes.Eq (Lexer.L a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dEq :: GHC.Classes.Eq a).
                  @ (Lexer.L a)
                  (Parser.$fEqL_$c== @ a $dEq)
                  (Parser.$fEqL_$c/= @ a $dEq) -}
8328219da47dd5a1bc93988fa04ad412
  $fEqL_$c/= ::
    forall a.
    GHC.Classes.Eq a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,U><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 GHC.Classes.not (Parser.$fEqL_$c== @ a $dEq x y)) -}
c8e2574be6016d6d528302c094bb9895
  $fEqL_$c== ::
    forall a.
    GHC.Classes.Eq a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (ds :: Lexer.L a)
                   (ds1 :: Lexer.L a) ->
                 case ds of wild { Lexer.L ds2 x ->
                 case ds1 of wild1 { Lexer.L ds3 y ->
                 GHC.Classes.== @ a $dEq x y } }) -}
88be636705ee31796543d17c44532d43
  $fEqPFType :: GHC.Classes.Eq Parser.PFType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PFType Parser.$fEqPFType_$c== Parser.$fEqPFType_$c/= -}
88be636705ee31796543d17c44532d43
  $fEqPFType_$c/= :: Parser.PFType -> Parser.PFType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Parser.PFType) (b :: Parser.PFType) ->
                 case Parser.$fEqPFType_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
88be636705ee31796543d17c44532d43
  $fEqPFType_$c== :: Parser.PFType -> Parser.PFType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
6f98169b19d142a8d924184318e4525f
  $fOrdL ::
    forall a. GHC.Classes.Ord a => GHC.Classes.Ord (Lexer.L a)
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dOrd :: GHC.Classes.Ord a).
                  @ (Lexer.L a)
                  (Parser.$fOrdL_$cp1Ord @ a $dOrd)
                  (Parser.$fOrdL_$ccompare @ a $dOrd)
                  (Parser.$fOrdL_$c< @ a $dOrd)
                  (Parser.$fOrdL_$c<= @ a $dOrd)
                  (Parser.$fOrdL_$c> @ a $dOrd)
                  (Parser.$fOrdL_$c>= @ a $dOrd)
                  (Parser.$fOrdL_$cmax @ a $dOrd)
                  (Parser.$fOrdL_$cmin @ a $dOrd) -}
da07335f6a698bd8fbdcaaeccd8956d8
  $fOrdL_$c< ::
    forall a.
    GHC.Classes.Ord a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True } } }) -}
cefbd9bdc10d3881171196a7370b1174
  $fOrdL_$c<= ::
    forall a.
    GHC.Classes.Ord a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False } } }) -}
21cd4a1d0bff9bbfe69a62f5294549f7
  $fOrdL_$c> ::
    forall a.
    GHC.Classes.Ord a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True } } }) -}
7d94764672c464f3b8572ec7f5a94cad
  $fOrdL_$c>= ::
    forall a.
    GHC.Classes.Ord a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } }) -}
b11173da93a1decdc9e44afe04ae3e3b
  $fOrdL_$ccompare ::
    forall a.
    GHC.Classes.Ord a =>
    Lexer.L a -> Lexer.L a -> GHC.Types.Ordering
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(A,U)><S,1*U(A,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (ds :: Lexer.L a)
                   (ds1 :: Lexer.L a) ->
                 case ds of wild { Lexer.L ds2 x ->
                 case ds1 of wild1 { Lexer.L ds3 y ->
                 GHC.Classes.compare @ a $dOrd x y } }) -}
f0449490b414873088b6031b6a06f1f8
  $fOrdL_$cmax ::
    forall a. GHC.Classes.Ord a => Lexer.L a -> Lexer.L a -> Lexer.L a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(U,U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> wild1 GHC.Types.GT -> wild } } }) -}
b57e166f5656e18104e4535fe54d6039
  $fOrdL_$cmin ::
    forall a. GHC.Classes.Ord a => Lexer.L a -> Lexer.L a -> Lexer.L a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLLLLL),1*U(A,1*C1(C1(U)),A,A,A,A,A,A)><S,1*U(U,U)><S,1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lexer.L a)
                   (y :: Lexer.L a) ->
                 case x of wild { Lexer.L ds x1 ->
                 case y of wild1 { Lexer.L ds1 y1 ->
                 case GHC.Classes.compare @ a $dOrd x1 y1 of wild2 {
                   DEFAULT -> wild GHC.Types.GT -> wild1 } } }) -}
da2607bca64d98ac6c19708103300f8f
  $fOrdL_$cp1Ord ::
    forall {a}. GHC.Classes.Ord a => GHC.Classes.Eq (Lexer.L a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Parser.$fEqL @ a (GHC.Classes.$p1Ord @ a $dOrd)) -}
3f8bebefee360831a01c29169be3d601
  $fShowP2Result :: GHC.Show.Show Parser.P2Result
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.P2Result
                  Parser.$fShowP2Result_$cshowsPrec
                  Parser.$fShowP2Result_$cshow
                  Parser.$fShowP2Result_$cshowList -}
3f8bebefee360831a01c29169be3d601
  $fShowP2Result1 :: Parser.P2Result -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Parser.P2Result) (w1 :: GHC.Base.String) ->
                 case w of ww { Parser.P2Result ww1 ->
                 Parser.$w$cshowsPrec 0# ww1 w1 }) -}
fa24292931ad922a35e497d6f350720c
  $fShowP2Result10 ::
    (Parser.PExpr, Parser.PExpr) -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ (w3 :: (Parser.PExpr, Parser.PExpr))
                   (w4 :: GHC.Base.String)[OneShot] ->
                 case w3 of ww { (,) ww1 ww2 ->
                 GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows7
                   (Parser.$w$cshowsPrec6
                      0#
                      ww1
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.shows5
                         (GHC.Show.$fShow(,)_$sgo
                            (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w4)
                            (Parser.$w$cshowsPrec6 0# ww2)
                            (GHC.Types.[] @ GHC.Show.ShowS)))) }) -}
a91f26a096ac319b6a9a589bae023d56
  $fShowP2Result11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PGuards "#) -}
72ff90637d5db482678052da4b74fbb1
  $fShowP2Result12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PNoGuards "#) -}
fd197aa30dfd4a469897b8f761d33327
  $fShowP2Result13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "P2Result "#) -}
8a4e025f1345a013269fcf3344482c9d
  $fShowP2Result2 :: Parser.PDecl -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.PDecl) -> Parser.$w$cshowsPrec1 0# w) -}
2b636f61ad0c9e684e3c7dd225bed50f
  $fShowP2Result3 :: Parser.PConstr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.PConstr) ->
                 case w of ww { Parser.PConstr ww1 ww2 ->
                 Parser.$w$cshowsPrec2 0# ww1 ww2 }) -}
88be636705ee31796543d17c44532d43
  $fShowP2Result4 :: Parser.PFType -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.PFType) ->
                 Parser.$w$cshowsPrec3 0# w) -}
e08d12ecca961c91f54f4ab530969233
  $fShowP2Result5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PConstr "#) -}
991c7c43a63f36c1fe47401b51129436
  $fShowP2Result6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PDataType "#) -}
9542043dd404be159a7c21b6fb633a72
  $fShowP2Result7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PFType "#) -}
9df8bd11ba9a37353e47f3742eb4b853
  $fShowP2Result8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PFunc "#) -}
1b7878c2c967f8adf26aa1b34e8a140a
  $fShowP2Result9 :: Parser.Pat -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.Pat) -> Parser.$w$cshowsPrec4 0# w) -}
3f8bebefee360831a01c29169be3d601
  $fShowP2Result_$cshow :: Parser.P2Result -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Parser.P2Result) ->
                 case x of wild { Parser.P2Result b1 ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Parser.$fShowP2Result13)
                   (GHC.Show.showList__
                      @ Parser.PDecl
                      Parser.$fShowP2Result2
                      b1
                      (GHC.Types.[] @ GHC.Types.Char)) }) -}
3f8bebefee360831a01c29169be3d601
  $fShowP2Result_$cshowList :: [Parser.P2Result] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.P2Result
                   Parser.$fShowP2Result1) -}
3f8bebefee360831a01c29169be3d601
  $fShowP2Result_$cshowsPrec ::
    GHC.Types.Int -> Parser.P2Result -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Parser.P2Result)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Parser.P2Result ww3 ->
                 Parser.$w$cshowsPrec ww1 ww3 w2 } }) -}
2b636f61ad0c9e684e3c7dd225bed50f
  $fShowPConstr :: GHC.Show.Show Parser.PConstr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PConstr
                  Parser.$fShowPConstr_$cshowsPrec
                  Parser.$fShowPConstr_$cshow
                  Parser.$fShowPConstr_$cshowList -}
2b636f61ad0c9e684e3c7dd225bed50f
  $fShowPConstr_$cshow :: Parser.PConstr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U),1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Parser.PConstr) ->
                 case w of ww { Parser.PConstr ww1 ww2 ->
                 Parser.$w$cshow ww1 ww2 }) -}
2b636f61ad0c9e684e3c7dd225bed50f
  $fShowPConstr_$cshowList :: [Parser.PConstr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PConstr
                   Parser.$fShowP2Result3) -}
2b636f61ad0c9e684e3c7dd225bed50f
  $fShowPConstr_$cshowsPrec ::
    GHC.Types.Int -> Parser.PConstr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.PConstr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Parser.PConstr ww3 ww4 ->
                 Parser.$w$cshowsPrec2 ww1 ww3 ww4 } }) -}
8a4e025f1345a013269fcf3344482c9d
  $fShowPDecl :: GHC.Show.Show Parser.PDecl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PDecl
                  Parser.$fShowPDecl_$cshowsPrec
                  Parser.$fShowPDecl_$cshow
                  Parser.$fShowPDecl_$cshowList -}
8a4e025f1345a013269fcf3344482c9d
  $fShowPDecl_$cshow :: Parser.PDecl -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Parser.PDecl) ->
                 Parser.$fShowPDecl_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8a4e025f1345a013269fcf3344482c9d
  $fShowPDecl_$cshowList :: [Parser.PDecl] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PDecl
                   Parser.$fShowP2Result2) -}
8a4e025f1345a013269fcf3344482c9d
  $fShowPDecl_$cshowsPrec ::
    GHC.Types.Int -> Parser.PDecl -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.PDecl) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parser.$w$cshowsPrec1 ww1 w1 }) -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $fShowPExpr :: GHC.Show.Show Parser.PExpr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PExpr
                  Parser.$fShowPExpr_$cshowsPrec
                  Parser.$fShowPExpr_$cshow
                  Parser.$fShowPExpr_$cshowList -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $fShowPExpr1 :: Parser.PExpr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.PExpr) -> Parser.$w$cshowsPrec6 0# w) -}
9a37836d16cc868834160b9c4c5d60cf
  $fShowPExpr2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PAExpr "#) -}
38aaeec5a3ca2bd66936beb0e8ee42e4
  $fShowPExpr3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PApp "#) -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $fShowPExpr_$cshow :: Parser.PExpr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Parser.PExpr) ->
                 case x of wild {
                   Parser.PApp b1 b2
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowPExpr3
                        (case b1 of ww2 { Lexer.L ww3 ww4 ->
                         Lexer.$w$cshowsPrec1
                           @ Lexer.Token
                           Lexer.$fShowToken
                           11#
                           ww3
                           ww4
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (GHC.Show.showList__
                                 @ Parser.PExpr
                                 Parser.$fShowPExpr1
                                 b2
                                 (GHC.Types.[] @ GHC.Types.Char))) })
                   Parser.PAExpr b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowPExpr2
                        (case b1 of ww2 { Lexer.L ww3 ww4 ->
                         Lexer.$w$cshowsPrec1
                           @ Lexer.Token
                           Lexer.$fShowToken
                           11#
                           ww3
                           ww4
                           (GHC.Types.[] @ GHC.Types.Char) }) }) -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $fShowPExpr_$cshowList :: [Parser.PExpr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PExpr
                   Parser.$fShowPExpr1) -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $fShowPExpr_$cshowsPrec ::
    GHC.Types.Int -> Parser.PExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.PExpr) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parser.$w$cshowsPrec6 ww1 w1 }) -}
88be636705ee31796543d17c44532d43
  $fShowPFType :: GHC.Show.Show Parser.PFType
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PFType
                  Parser.$fShowPFType_$cshowsPrec
                  Parser.$fShowPFType_$cshow
                  Parser.$fShowPFType_$cshowList -}
88be636705ee31796543d17c44532d43
  $fShowPFType_$cshow :: Parser.PFType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Parser.PFType) ->
                 Parser.$fShowPFType_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
88be636705ee31796543d17c44532d43
  $fShowPFType_$cshowList :: [Parser.PFType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PFType
                   Parser.$fShowP2Result4) -}
88be636705ee31796543d17c44532d43
  $fShowPFType_$cshowsPrec ::
    GHC.Types.Int -> Parser.PFType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.PFType) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parser.$w$cshowsPrec3 ww1 w1 }) -}
ab0dc2d497ba317170847ccac7a2e7de
  $fShowPGuards :: GHC.Show.Show Parser.PGuards
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PGuards
                  Parser.$fShowPGuards_$cshowsPrec
                  Parser.$fShowPGuards_$cshow
                  Parser.$fShowPGuards_$cshowList -}
ab0dc2d497ba317170847ccac7a2e7de
  $fShowPGuards1 :: Parser.PGuards -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Parser.PGuards) ->
                 Parser.$w$cshowsPrec5 0# w) -}
bf9f2fddc4b37750663d6891a937f7c0
  $fShowPGuards2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ab0dc2d497ba317170847ccac7a2e7de
  $fShowPGuards_$cshow :: Parser.PGuards -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Parser.PGuards) ->
                 case x of wild {
                   Parser.PNoGuards b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowP2Result12
                        (case b1 of wild1 {
                           Parser.PApp b2 b3
                           -> GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows7
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Parser.$fShowPExpr3
                                   (case b2 of ww2 { Lexer.L ww3 ww4 ->
                                    Lexer.$w$cshowsPrec1
                                      @ Lexer.Token
                                      Lexer.$fShowToken
                                      11#
                                      ww3
                                      ww4
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.showSpace1
                                         (GHC.Show.showList__
                                            @ Parser.PExpr
                                            Parser.$fShowPExpr1
                                            b3
                                            Parser.$fShowPGuards2)) }))
                           Parser.PAExpr b2
                           -> GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows7
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Parser.$fShowPExpr2
                                   (case b2 of ww2 { Lexer.L ww3 ww4 ->
                                    Lexer.$w$cshowsPrec1
                                      @ Lexer.Token
                                      Lexer.$fShowToken
                                      11#
                                      ww3
                                      ww4
                                      Parser.$fShowPGuards2 })) })
                   Parser.PGuards b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowP2Result11
                        (GHC.Show.showList__
                           @ (Parser.PExpr, Parser.PExpr)
                           Parser.$fShowP2Result10
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
ab0dc2d497ba317170847ccac7a2e7de
  $fShowPGuards_$cshowList :: [Parser.PGuards] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PGuards
                   Parser.$fShowPGuards1) -}
ab0dc2d497ba317170847ccac7a2e7de
  $fShowPGuards_$cshowsPrec ::
    GHC.Types.Int -> Parser.PGuards -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.PGuards) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parser.$w$cshowsPrec5 ww1 w1 }) -}
3d50108b1021ea35f57f3be9114a1dd8
  $fShowPState :: GHC.Show.Show Parser.PState
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.PState
                  Parser.$fShowPState_$cshowsPrec
                  Parser.$fShowPState_$cshow
                  Parser.$fShowPState_$cshowList -}
3d50108b1021ea35f57f3be9114a1dd8
  $fShowPState1 :: Parser.PState -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*H><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Parser.PState) (eta :: GHC.Base.String) ->
                 case ds of wild { Parser.NoState ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Parser.$fShowPState2)
                   eta }) -}
ceb1f01a7862aa68a06bdc04f190b087
  $fShowPState2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoState"#) -}
3d50108b1021ea35f57f3be9114a1dd8
  $fShowPState_$cshow :: Parser.PState -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Parser.PState) ->
                 case x of wild { Parser.NoState -> Parser.$fShowPState2 }) -}
3d50108b1021ea35f57f3be9114a1dd8
  $fShowPState_$cshowList :: [Parser.PState] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.PState
                   Parser.$fShowPState1) -}
3d50108b1021ea35f57f3be9114a1dd8
  $fShowPState_$cshowsPrec ::
    GHC.Types.Int -> Parser.PState -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*H><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Parser.PState)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild { Parser.NoState ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Parser.$fShowPState2)
                   eta }) -}
1b7878c2c967f8adf26aa1b34e8a140a
  $fShowPat :: GHC.Show.Show Parser.Pat
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Parser.Pat
                  Parser.$fShowPat_$cshowsPrec
                  Parser.$fShowPat_$cshow
                  Parser.$fShowPat_$cshowList -}
69a824c722421dcfd02508b67d5587b7
  $fShowPat1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ConsPat "#) -}
2ef63b8b3b1a79006e501375aab8a5df
  $fShowPat2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pat "#) -}
1b7878c2c967f8adf26aa1b34e8a140a
  $fShowPat_$cshow :: Parser.Pat -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Parser.Pat) ->
                 case x of wild {
                   Parser.Pat b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowPat2
                        (case b1 of ww2 { Lexer.L ww3 ww4 ->
                         Lexer.$w$cshowsPrec1
                           @ Lexer.Token
                           Lexer.$fShowToken
                           11#
                           ww3
                           ww4
                           (GHC.Types.[] @ GHC.Types.Char) })
                   Parser.ConsPat b1 b2
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowPat1
                        (case b1 of ww2 { Lexer.L ww3 ww4 ->
                         Lexer.$w$cshowsPrec1
                           @ Lexer.Token
                           Lexer.$fShowToken
                           11#
                           ww3
                           ww4
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (GHC.Show.showList__
                                 @ Parser.Pat
                                 Parser.$fShowP2Result9
                                 b2
                                 (GHC.Types.[] @ GHC.Types.Char))) }) }) -}
1b7878c2c967f8adf26aa1b34e8a140a
  $fShowPat_$cshowList :: [Parser.Pat] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Parser.Pat
                   Parser.$fShowP2Result9) -}
1b7878c2c967f8adf26aa1b34e8a140a
  $fShowPat_$cshowsPrec ::
    GHC.Types.Int -> Parser.Pat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Parser.Pat) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Parser.$w$cshowsPrec4 ww1 w1 }) -}
6857699e8d2a0ec63e667320b05c8a23
  $s$fMonadStateT_$s$fMonadStateT_$c>>= ::
    forall {s} a b.
    Control.Monad.Trans.State.Lazy.StateT
      s (Data.Either.Either GHC.Base.String) a
    -> (a
        -> Control.Monad.Trans.State.Lazy.StateT
             s (Data.Either.Either GHC.Base.String) b)
    -> Control.Monad.Trans.State.Lazy.StateT
         s (Data.Either.Either GHC.Base.String) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(C1(U))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Lazy.StateT
                            s (Data.Either.Either GHC.Base.String) a)
                   (k :: a
                         -> Control.Monad.Trans.State.Lazy.StateT
                              s (Data.Either.Either GHC.Base.String) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Either.Either GHC.Base.String (b, s))
                   @ (Control.Monad.Trans.State.Lazy.StateT
                        s (Data.Either.Either GHC.Base.String) b)
                   (\ (tpl :: s -> Data.Either.Either GHC.Base.String (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Either.Either GHC.Base.String (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <s>_N <Data.Either.Either GHC.Base.String>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Either.$fMonadEither_$c>>=
                      @ [GHC.Types.Char]
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Lazy.runStateT
                         @ s
                         @ (Data.Either.Either GHC.Base.String)
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s))[OneShot] ->
                       Control.Monad.Trans.State.Lazy.runStateT
                         @ s
                         @ (Data.Either.Either GHC.Base.String)
                         @ b
                         (k (case ds of wild { (,) a1 s' -> a1 }))
                         (case ds of wild { (,) a1 s' -> s' })))) -}
e11100e00ba7cb8e4db614017ae8964d
  $tc'ConsPat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13870786098083830662##
                   9045802943640694468##
                   Parser.$trModule
                   Parser.$tc'ConsPat1) -}
fece8cf3c0e15eba85aa2452c840c66e
  $tc'ConsPat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ConsPat"#) -}
aa1c6e6de945d2fbab2aa3785ce5bf67
  $tc'HappyA# :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16773502031721739530##
                   6067659572548776802##
                   Parser.$trModule
                   Parser.$tc'HappyA#1) -}
bf4818c9e56441b91c90be8dfd80e2e1
  $tc'HappyA#1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HappyA#"#) -}
9afba40cbc3fef21ae45ab649e223535
  $tc'HappyAbsSyn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12238013970111619161##
                   1742357376070648530##
                   Parser.$trModule
                   Parser.$tc'HappyAbsSyn1) -}
9e466f64b5243fc5e9230bee50fee13b
  $tc'HappyAbsSyn1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HappyAbsSyn"#) -}
34cca04eee99e4c0a5a2a0178f10f3cf
  $tc'HappyCons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11298847830654655411##
                   17839209013917495725##
                   Parser.$trModule
                   Parser.$tc'HappyCons1) -}
13edb5381ff0e900649072a18b61137f
  $tc'HappyCons1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HappyCons"#) -}
62ccb9ab1c1972a5f035ece781349a56
  $tc'HappyStk :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6603420756264817626##
                   6011381629887120749##
                   Parser.$trModule
                   Parser.$tc'HappyStk1) -}
f792e1f649a63906585b76d2cf25bfc6
  $tc'HappyStk1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'HappyStk"#) -}
da9d083776f10f4e8892cb110b3cd2af
  $tc'NoState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1172109383558353790##
                   5004363488353931522##
                   Parser.$trModule
                   Parser.$tc'NoState1) -}
d366d8a0de8b8bc7f5d76d645e331edf
  $tc'NoState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoState"#) -}
b7bec316d4bf50d498357412c4735f00
  $tc'P2Result :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13855166924660334190##
                   7191890353206782001##
                   Parser.$trModule
                   Parser.$tc'P2Result1) -}
7f25fb79f757c0d8f3af039a28a67e94
  $tc'P2Result1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'P2Result"#) -}
cc94b3998b7c690aa80603ddf1e388d7
  $tc'PAExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1951926958034403681##
                   1181657888798233223##
                   Parser.$trModule
                   Parser.$tc'PAExpr1) -}
cb3e38902d9677e756dee0abc9295628
  $tc'PAExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PAExpr"#) -}
9d68758d6cd906e6868c240db1c85f55
  $tc'PApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5432745312163774310##
                   9740566516827214592##
                   Parser.$trModule
                   Parser.$tc'PApp1) -}
cd2bb7de1def8e988440fdd39da758ce
  $tc'PApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PApp"#) -}
d64320ee7620c895be7a889900250501
  $tc'PConstr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16044558203647207651##
                   733659684933359824##
                   Parser.$trModule
                   Parser.$tc'PConstr1) -}
5fb2dd0bf644d79e18c1c1efcc9f538a
  $tc'PConstr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PConstr"#) -}
5bef2780859e7b24379a63ae215d2611
  $tc'PDataType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8978481540578581605##
                   2410196325864153204##
                   Parser.$trModule
                   Parser.$tc'PDataType1) -}
989762bc39ee04aa36f00249f088b2b6
  $tc'PDataType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PDataType"#) -}
1208b4754dad25e42a7ca3ac780bbd02
  $tc'PFType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3499830596441288981##
                   4127619322353420088##
                   Parser.$trModule
                   Parser.$tc'PFType1) -}
7e4dc9c015801bb8bf4d33c9e99c9ef1
  $tc'PFType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PFType"#) -}
27ea79e4ec75119bd509a8a42ee9be30
  $tc'PFunc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11237562435281955991##
                   3977779827871825344##
                   Parser.$trModule
                   Parser.$tc'PFunc1) -}
acf514b2dad32010872874ece2e81261
  $tc'PFunc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PFunc"#) -}
cf2c66ca2f2ae042d015c00968448014
  $tc'PGuards :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2916682803993941035##
                   7563897184593966421##
                   Parser.$trModule
                   Parser.$tc'PGuards1) -}
9c7fe7402c5eff479db3c07bdb27b8e1
  $tc'PGuards1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PGuards"#) -}
2d102fb476539599c97f38b05e70c7d0
  $tc'PNoGuards :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3357252133899378560##
                   8902983186479478236##
                   Parser.$trModule
                   Parser.$tc'PNoGuards1) -}
50e288bbfc1be5ff3ea11bf21d15f1a9
  $tc'PNoGuards1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PNoGuards"#) -}
ed1ef1efbb1667e637df93e6c9aca93e
  $tc'PTAExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14424858269258820313##
                   5189623757679595801##
                   Parser.$trModule
                   Parser.$tc'PTAExpr1) -}
750fad99b51ea9c3eb3a321af64a29bc
  $tc'PTAExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PTAExpr"#) -}
430aa430c32911631c767c0bbf8fa41c
  $tc'PTApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17007845451708766448##
                   133665353047623874##
                   Parser.$trModule
                   Parser.$tc'PTApp1) -}
bea6a576ad273c8fd4bc9dae026757fe
  $tc'PTApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PTApp"#) -}
d768c84614504f371e1a253c57990c2b
  $tc'PTArrow :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14352083985382607176##
                   16828087427174610307##
                   Parser.$trModule
                   Parser.$tc'PTArrow1) -}
aef92601d2ac00a49036ed8df165ceb3
  $tc'PTArrow1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PTArrow"#) -}
f9c4d666beee768b63d2cef37a84e93f
  $tc'Pat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1559613421165316608##
                   1241757206472651021##
                   Parser.$trModule
                   Parser.$tc'Pat1) -}
00582d9dca20d3325c1c38c94e05ba1a
  $tc'Pat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Pat"#) -}
1dfc7ad4a353b4b6446fbf1ced7a357f
  $tcHappyAbsSyn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18049680356947899174##
                   11525491850105731417##
                   Parser.$trModule
                   Parser.$tcHappyAbsSyn1) -}
74ccb0a2d5fea25d4600f4c6426ac921
  $tcHappyAbsSyn1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HappyAbsSyn"#) -}
a886d42e9e286f201f7cd6f026b3d3f3
  $tcHappyAddr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5302501655138002647##
                   17842380154000325258##
                   Parser.$trModule
                   Parser.$tcHappyAddr1) -}
c350c2fcb941134a7a6a12cc251bc5c5
  $tcHappyAddr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HappyAddr"#) -}
d8a8d238e27cc5cd10c93e94176446c1
  $tcHappyStk :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8654477477970175194##
                   15138055557757495030##
                   Parser.$trModule
                   Parser.$tcHappyStk1) -}
b47ab9261be11b234ac088bf8b9d5cf6
  $tcHappyStk1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HappyStk"#) -}
98c626adf6cb133cdba736cfdc5bca0e
  $tcHappy_IntList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5277436065691958292##
                   5639211193301398964##
                   Parser.$trModule
                   Parser.$tcHappy_IntList1) -}
bf1becf3df62714429c924d2be443fe9
  $tcHappy_IntList1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Happy_IntList"#) -}
8faaebfbd72bfd62746a83245c451e67
  $tcP2Result :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12476492266562318978##
                   4709702679947043678##
                   Parser.$trModule
                   Parser.$tcP2Result1) -}
41232505e918b8efb8cd5b70ebced083
  $tcP2Result1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "P2Result"#) -}
6380d006c714173f546462f0fd666893
  $tcPConstr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9177932442760344373##
                   17280939174583286369##
                   Parser.$trModule
                   Parser.$tcPConstr1) -}
005fd1bdb447fa6abec7fe1476aa742a
  $tcPConstr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PConstr"#) -}
d2bba5374c83bba6105822f6328d85d7
  $tcPDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6561316936717647731##
                   9324437722170369399##
                   Parser.$trModule
                   Parser.$tcPDecl1) -}
c195798958e6e42ae990786492c29c4b
  $tcPDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PDecl"#) -}
b48864faf234f87a5e722478841a3c1d
  $tcPExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2262639202710341641##
                   13644454867196318041##
                   Parser.$trModule
                   Parser.$tcPExpr1) -}
c41e1762ab5f3e06633621851534077c
  $tcPExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PExpr"#) -}
d84e3372cde02bfbc84bc804cbb7622c
  $tcPFType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15420976940864566804##
                   2760782574295364770##
                   Parser.$trModule
                   Parser.$tcPFType1) -}
47e361fa9b4432d87440a52fe02ada64
  $tcPFType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PFType"#) -}
8b882888f8e649cf734ef97d0ecf05ee
  $tcPGuards :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14212610163073262915##
                   2365642868978219461##
                   Parser.$trModule
                   Parser.$tcPGuards1) -}
59ebf99b5a622db0a72fbe31bc6f576f
  $tcPGuards1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PGuards"#) -}
e557b27d0c8bddac27a0a52a5ce9d0f4
  $tcPState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12101505846808170715##
                   15112212519270579943##
                   Parser.$trModule
                   Parser.$tcPState1) -}
7fef2af04acdf61bbbc9b5f8d7a4891d
  $tcPState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PState"#) -}
6ff9aa5a4f8dd10c7fde75d14e6460e1
  $tcPat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10220225119446306022##
                   2945798157624036448##
                   Parser.$trModule
                   Parser.$tcPat1) -}
f3cb653327bed07709e3afba4936bfcb
  $tcPat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Pat"#) -}
27aec6cd5544c5704699206f7ffbe2f6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Parser.$trModule2
                   Parser.$trModule1) -}
2c0f2857c77f4d9d93d27e94b1650e86
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Parser"#) -}
218f833ed68ad354ace02e9021601cd0
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "HaskellCircuits-0.1.0.0-3mIW93ol3alH6nhlDJ7Hzo"#) -}
568ed58bb495f3839551d0a71fff81fa
  $w$cshow :: Lexer.LToken -> [Parser.PFType] -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(U,U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: Lexer.LToken) (ww1 :: [Parser.PFType]) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Parser.$fShowP2Result5
                   (case ww of ww2 { Lexer.L ww3 ww4 ->
                    Lexer.$w$cshowsPrec1
                      @ Lexer.Token
                      Lexer.$fShowToken
                      11#
                      ww3
                      ww4
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.showSpace1
                         (GHC.Show.showList__
                            @ Parser.PFType
                            Parser.$fShowP2Result4
                            ww1
                            (GHC.Types.[] @ GHC.Types.Char))) })) -}
a9f8c67704aa98f6ae1644cb1dd331e6
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [Parser.PDecl] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [Parser.PDecl])
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Parser.$fShowP2Result13
                        (GHC.Show.showList__ @ Parser.PDecl Parser.$fShowP2Result2 ww1 w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Parser.$fShowP2Result13
                           (GHC.Show.showList__
                              @ Parser.PDecl
                              Parser.$fShowP2Result2
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
8a4e025f1345a013269fcf3344482c9d
  $w$cshowsPrec1 :: GHC.Prim.Int# -> Parser.PDecl -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Parser.PDecl) ->
                 case w of wild {
                   Parser.PFunc b1 b2 b3
                   -> let {
                        f :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { Lexer.L ww3 ww4 ->
                          Lexer.$w$cshowsPrec1 @ Lexer.Token Lexer.$fShowToken 11# ww3 ww4 }
                      } in
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Parser.$w$cshowsPrec5 11# b3
                      } in
                      let {
                        g1 :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          f (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ Parser.Pat
                                  Parser.$fShowP2Result9
                                  b2
                                  (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x))))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Parser.$fShowP2Result8 (g1 x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Parser.$fShowP2Result8
                                (g1 (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Parser.PFType b1 b2
                   -> let {
                        f :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { Lexer.L ww3 ww4 ->
                          Lexer.$w$cshowsPrec1 @ Lexer.Token Lexer.$fShowToken 11# ww3 ww4 }
                      } in
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Parser.$w$cshowsPrec3 11# b2
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Parser.$fShowP2Result7
                             (f (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Parser.$fShowP2Result7
                                (f (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))))) }
                   Parser.PDataType b1 b2
                   -> let {
                        f :: GHC.Base.String -> GHC.Base.String
                        = case b1 of ww2 { Lexer.L ww3 ww4 ->
                          Lexer.$w$cshowsPrec1 @ Lexer.Token Lexer.$fShowToken 11# ww3 ww4 }
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Parser.$fShowP2Result6
                            (f (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ Parser.PConstr
                                     Parser.$fShowP2Result3
                                     b2
                                     x)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) } }) -}
1c9fbf52d8a4b7d1cc38619f24cafdb0
  $w$cshowsPrec2 ::
    GHC.Prim.Int# -> Lexer.LToken -> [Parser.PFType] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lexer.LToken)
                   (ww2 :: [Parser.PFType]) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Lexer.L ww4 ww5 ->
                     Lexer.$w$cshowsPrec1 @ Lexer.Token Lexer.$fShowToken 11# ww4 ww5 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Parser.$fShowP2Result5
                       (f (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (GHC.Show.showList__
                                @ Parser.PFType
                                Parser.$fShowP2Result4
                                ww2
                                x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x)) }) -}
88be636705ee31796543d17c44532d43
  $w$cshowsPrec3 :: GHC.Prim.Int# -> Parser.PFType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
1b7878c2c967f8adf26aa1b34e8a140a
  $w$cshowsPrec4 :: GHC.Prim.Int# -> Parser.Pat -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
ab0dc2d497ba317170847ccac7a2e7de
  $w$cshowsPrec5 :: GHC.Prim.Int# -> Parser.PGuards -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Parser.PGuards) ->
                 case w of wild {
                   Parser.PNoGuards b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Parser.$w$cshowsPrec6 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Parser.$fShowP2Result12 (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Parser.$fShowP2Result12
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Parser.PGuards b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Parser.$fShowP2Result11
                             (GHC.Show.showList__
                                @ (Parser.PExpr, Parser.PExpr)
                                Parser.$fShowP2Result10
                                b1
                                x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Parser.$fShowP2Result11
                                (GHC.Show.showList__
                                   @ (Parser.PExpr, Parser.PExpr)
                                   Parser.$fShowP2Result10
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) } }) -}
1b1c5a1d1f9ac4cca7f01f2fa0906802
  $w$cshowsPrec6 :: GHC.Prim.Int# -> Parser.PExpr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
63879791816d1d6185c36737e7bde1d0
  type role HappyAbsSyn phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom phantom
  newtype HappyAbsSyn t4
                      t5
                      t6
                      t7
                      t8
                      t9
                      t10
                      t11
                      t12
                      t13
                      t14
                      t15
                      t16
                      t17
                      t18
                      t19
                      t20
                      t21
                      t22
                      t23
                      t24
                      t25
                      t26
                      t27
                      t28
    = HappyAbsSyn Parser.HappyAny
73aff3c5d81af3c7ce275b9a2fa0bb47
  data HappyAddr = HappyA# GHC.Prim.Addr#
6bff64f8a839053c7f8f8676b7408308
  type HappyAny = GHC.Prim.Any
7df538376d0f545062de428c4002ce3f
  data HappyStk a = HappyStk a (Parser.HappyStk a)
    RecFlag: Recursive
feec13773a58d3e1e157ce6d82035d37
  data Happy_IntList = HappyCons GHC.Prim.Int# Parser.Happy_IntList
    RecFlag: Recursive
fc2a9b2255cb08ceb1f2724052669740
  type P a =
    Control.Monad.Trans.State.Lazy.StateT
      Parser.PState (Data.Either.Either GHC.Base.String) a
3f8bebefee360831a01c29169be3d601
  data P2Result = P2Result [Parser.PDecl]
2b636f61ad0c9e684e3c7dd225bed50f
  data PConstr = PConstr Lexer.LToken [Parser.PFType]
8a4e025f1345a013269fcf3344482c9d
  data PDecl
    = PFunc Lexer.LToken [Parser.Pat] Parser.PGuards
    | PFType Lexer.LToken Parser.PFType
    | PDataType Lexer.LToken [Parser.PConstr]
1b1c5a1d1f9ac4cca7f01f2fa0906802
  data PExpr = PApp Lexer.LToken [Parser.PExpr] | PAExpr Lexer.LToken
88be636705ee31796543d17c44532d43
  data PFType
    = PTApp Lexer.LToken [Parser.PFType]
    | PTArrow Parser.PFType Parser.PFType
    | PTAExpr Lexer.LToken
ab0dc2d497ba317170847ccac7a2e7de
  data PGuards
    = PNoGuards Parser.PExpr | PGuards [(Parser.PExpr, Parser.PExpr)]
3d50108b1021ea35f57f3be9114a1dd8
  data PState = NoState
1b7878c2c967f8adf26aa1b34e8a140a
  data Pat = Pat Lexer.LToken | ConsPat Lexer.LToken [Parser.Pat]
754c06b765298f66abdd6fd8a5542180
  happyAccept ::
    forall {b} {a} {t} {t1}.
    GHC.Prim.Int#
    -> t1 -> GHC.Prim.Int# -> t -> Parser.HappyStk a -> b -> Parser.P a
  {- Arity: 7, HasNoCafRefs,
     Strictness: <S,1*U><L,A><L,A><L,A><S,1*U(U,1*U(U,A))><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyAccept1
                  `cast`
                (forall (b :: <*>_N) (a :: <*>_N) (t :: <*>_N) (t1 :: <*>_N).
                 <GHC.Prim.Int#>_R
                 ->_R <t1>_R
                 ->_R <GHC.Prim.Int#>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyStk a>_R
                 ->_R <b>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Parser.PState>_N <Data.Either.Either GHC.Base.String>_R <a>_N)) -}
498efff165c0cdd9aebb2805ae3c6c41
  happyAccept1 ::
    forall {b} {a} {t} {t1}.
    GHC.Prim.Int#
    -> t1
    -> GHC.Prim.Int#
    -> t
    -> Parser.HappyStk a
    -> b
    -> Parser.PState
    -> Data.Either.Either GHC.Base.String (a, Parser.PState)
  {- Arity: 7, HasNoCafRefs,
     Strictness: <S,1*U><L,A><L,A><L,A><S,1*U(U,1*U(U,A))><L,A><L,U>m2,
     Unfolding: InlineRule (7, True, False)
                (\ @ b
                   @ a
                   @ t
                   @ t1
                   (ds :: GHC.Prim.Int#)
                   (tk :: t1)
                   (st :: GHC.Prim.Int#)
                   (sts :: t)
                   (ds1 :: Parser.HappyStk a)
                   (eta :: b)
                   (eta1 :: Parser.PState) ->
                 case ds of ds2 {
                   DEFAULT
                   -> case ds1 of wild { Parser.HappyStk ans ds3 ->
                      Data.Either.Right
                        @ [GHC.Types.Char]
                        @ (a, Parser.PState)
                        (ans, eta1) }
                   0#
                   -> case ds1 of wild { Parser.HappyStk ds3 ds4 ->
                      case ds4 of wild1 { Parser.HappyStk ans ds5 ->
                      Data.Either.Right
                        @ [GHC.Types.Char]
                        @ (a, Parser.PState)
                        (ans, eta1) } } }) -}
7e13fe215a604605a047ed176c452660
  happyActOffsets :: Parser.HappyAddr
  {- HasNoCafRefs, Strictness: m, Inline: NOINLINE -}
1eaa7303bbf1b22efd693425d4a878e0
  happyCheck :: Parser.HappyAddr
  {- HasNoCafRefs, Strictness: m, Inline: NOINLINE -}
df9fbc8552a7ace3e09e6a49564b7dd1
  happyDefActions :: Parser.HappyAddr
  {- HasNoCafRefs, Strictness: m, Inline: NOINLINE -}
f3db4afb493f8317c58b82a4c35f0514
  happyDoAction ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 3, Strictness: <S,U><L,U><S,U>, Inline: NOINLINE -}
7e81b3da100d2e6282f9047cd3423342
  happyDoSeq :: forall a b. a -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b (a1 :: a) (b1 :: b) ->
                 case a1 of a2 { DEFAULT -> b1 }) -}
25b4f9a28cf74350ad8b370592bb1668
  happyDontSeq :: forall a b. a -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a @ b (a1 :: a) (b1 :: b) -> b1) -}
bd2f79b6199d8b014abf4a8f088b0798
  happyDrop ::
    GHC.Prim.Int# -> Parser.Happy_IntList -> Parser.Happy_IntList
  {- Arity: 2, HasNoCafRefs -}
bd451185afe4a432c6001542ba5185d0
  happyDropStk ::
    forall {t}. GHC.Prim.Int# -> Parser.HappyStk t -> Parser.HappyStk t
  {- Arity: 2, HasNoCafRefs -}
daeb6573e63e9974eee9579a0297ee27
  happyError' :: forall a. [Lexer.LToken] -> Parser.P a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True) Parser.parseError -}
43d56a644b0fa6459926fd17b05406ad
  happyError_ ::
    forall {a}.
    GHC.Prim.Int# -> Lexer.LToken -> [Lexer.LToken] -> Parser.P a
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (ds :: GHC.Prim.Int#)
                   (tk :: Lexer.LToken)
                   (tks :: [Lexer.LToken]) ->
                 case ds of ds1 {
                   DEFAULT
                   -> Parser.parseError @ a (GHC.Types.: @ Lexer.LToken tk tks)
                   16# -> Parser.parseError @ a tks }) -}
db3ae0301e95eb73660e527e80f192b4
  happyFail ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Strictness: <S,1*U><L,U><L,U><L,U><L,U(U,U)>,
     Inline: NOINLINE -}
b0b40d0e1f9eb9061f225b2605b0fc10
  happyGoto ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 4, Strictness: <S,U><S,U><L,U><S,U>, Inline: NOINLINE -}
30eebb55417d0098ccc0100d56b85ae9
  happyGotoOffsets :: Parser.HappyAddr
  {- HasNoCafRefs, Strictness: m, Inline: NOINLINE -}
926f1c06a6cab8040e93d5bad857545f
  happyIn10 ::
    forall t10 t4 t5 t6 t7 t8 t9 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t10
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t10
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t10) ->
                 x)
                  `cast`
                (forall (t10 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t10>_R
                 ->_R UnsafeCo representational t10 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
c4ed5f38122aa96ca9aa8683b49c756e
  happyIn11 ::
    forall t11 t4 t5 t6 t7 t8 t9 t10 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t11
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t11
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t11) ->
                 x)
                  `cast`
                (forall (t11 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t11>_R
                 ->_R UnsafeCo representational t11 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
7aeb58ebc009e6334803f029417eab4d
  happyIn12 ::
    forall t12 t4 t5 t6 t7 t8 t9 t10 t11 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t12
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t12
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t12) ->
                 x)
                  `cast`
                (forall (t12 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t12>_R
                 ->_R UnsafeCo representational t12 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
78fee8bc9b6ba1e8c95d6ed10e003b98
  happyIn13 ::
    forall t13 t4 t5 t6 t7 t8 t9 t10 t11 t12 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t13
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t13
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t13) ->
                 x)
                  `cast`
                (forall (t13 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t13>_R
                 ->_R UnsafeCo representational t13 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
bb3db2ad1f6b8cffd6e74d9e16c4b4db
  happyIn14 ::
    forall t14 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t14
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t14
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t14) ->
                 x)
                  `cast`
                (forall (t14 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t14>_R
                 ->_R UnsafeCo representational t14 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
a1b622148ebcff833cbb2dc7fa6e08e3
  happyIn15 ::
    forall t15 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t15
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t15
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t15) ->
                 x)
                  `cast`
                (forall (t15 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t15>_R
                 ->_R UnsafeCo representational t15 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
e4a531ce8cef689e97a40f860d1ebf0e
  happyIn16 ::
    forall t16 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t16
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t16
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t16) ->
                 x)
                  `cast`
                (forall (t16 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t16>_R
                 ->_R UnsafeCo representational t16 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
cdcda2f8dbb167bd1f72097a74af6318
  happyIn17 ::
    forall t17 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t17
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t17
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t17) ->
                 x)
                  `cast`
                (forall (t17 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t17>_R
                 ->_R UnsafeCo representational t17 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
c87e8ec9e5f9065964d7a002566b2ca6
  happyIn18 ::
    forall t18 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t18
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t18
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t18) ->
                 x)
                  `cast`
                (forall (t18 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t18>_R
                 ->_R UnsafeCo representational t18 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
745957f406047f4f65707f1d5dd0619f
  happyIn19 ::
    forall t19 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t19
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t19
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t19) ->
                 x)
                  `cast`
                (forall (t19 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t19>_R
                 ->_R UnsafeCo representational t19 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
249d11ea712687d1c00c37a692f6941f
  happyIn20 ::
    forall t20 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t21 t22 t23 t24 t25 t26 t27 t28.
    t20
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t20
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t20) ->
                 x)
                  `cast`
                (forall (t20 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t20>_R
                 ->_R UnsafeCo representational t20 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
9cbf8924ef1488925a5b93bd60ff6c48
  happyIn21 ::
    forall t21 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t22 t23 t24 t25 t26 t27 t28.
    t21
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t21
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t21) ->
                 x)
                  `cast`
                (forall (t21 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t21>_R
                 ->_R UnsafeCo representational t21 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
16854de072d1816a7c65146e0058d51b
  happyIn22 ::
    forall t22 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t23 t24 t25 t26 t27 t28.
    t22
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t22
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t22) ->
                 x)
                  `cast`
                (forall (t22 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t22>_R
                 ->_R UnsafeCo representational t22 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
eea8ec7f9cec7148bf92b88091a6fa30
  happyIn23 ::
    forall t23 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t24 t25 t26 t27 t28.
    t23
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t23
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t23) ->
                 x)
                  `cast`
                (forall (t23 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t23>_R
                 ->_R UnsafeCo representational t23 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
2242eec9ef19e2ddd3cb7dbce97bc137
  happyIn24 ::
    forall t24 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t25 t26 t27 t28.
    t24
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t24
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t24) ->
                 x)
                  `cast`
                (forall (t24 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t24>_R
                 ->_R UnsafeCo representational t24 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
d44d17c5ded25c4cd868197c29840eba
  happyIn25 ::
    forall t25 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t26 t27 t28.
    t25
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t25
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t26
                   @ t27
                   @ t28
                   (x :: t25) ->
                 x)
                  `cast`
                (forall (t25 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t25>_R
                 ->_R UnsafeCo representational t25 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
e3fb3efe529c6cc7cd64ebf2a72726cb
  happyIn26 ::
    forall t26 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t27 t28.
    t26
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t26
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t27
                   @ t28
                   (x :: t26) ->
                 x)
                  `cast`
                (forall (t26 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t26>_R
                 ->_R UnsafeCo representational t26 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
7988c61265d09048cd6413234f2f859e
  happyIn27 ::
    forall t27 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t28.
    t27
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t27
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t28
                   (x :: t27) ->
                 x)
                  `cast`
                (forall (t27 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t28 :: <*>_N).
                 <t27>_R
                 ->_R UnsafeCo representational t27 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
5054fd887afc4e7881cbbc6795b0d137
  happyIn28 ::
    forall t28 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27.
    t28
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t28
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   (x :: t28) ->
                 x)
                  `cast`
                (forall (t28 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N).
                 <t28>_R
                 ->_R UnsafeCo representational t28 (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
0d789598a7cc4f4b8b4a5c52db39ba9f
  happyIn4 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t4
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t4) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t4>_R
                 ->_R UnsafeCo representational t4 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
22c107934ad5a8f8fecc599d9ec64e6f
  happyIn5 ::
    forall t5 t4 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t5
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t5
                   @ t4
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t5) ->
                 x)
                  `cast`
                (forall (t5 :: <*>_N) (t4 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t5>_R
                 ->_R UnsafeCo representational t5 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
3cc9b0eaa6e1ac97df9b8503c8ab6784
  happyIn6 ::
    forall t6 t4 t5 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t6
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t6
                   @ t4
                   @ t5
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t6) ->
                 x)
                  `cast`
                (forall (t6 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t6>_R
                 ->_R UnsafeCo representational t6 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
79006d07a352dc07156219a09e37a85e
  happyIn7 ::
    forall t7 t4 t5 t6 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t7
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t7
                   @ t4
                   @ t5
                   @ t6
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t7) ->
                 x)
                  `cast`
                (forall (t7 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t7>_R
                 ->_R UnsafeCo representational t7 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
eb9db8caf6c99cec7e9a3aba0b35825b
  happyIn8 ::
    forall t8 t4 t5 t6 t7 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t8
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t8
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t8) ->
                 x)
                  `cast`
                (forall (t8 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t8>_R
                 ->_R UnsafeCo representational t8 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
d9c09f11143d5975d36547e05bcc13ca
  happyIn9 ::
    forall t9 t4 t5 t6 t7 t8 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    t9
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t9
                   @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: t9) ->
                 x)
                  `cast`
                (forall (t9 :: <*>_N) (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <t9>_R
                 ->_R UnsafeCo representational t9 (Parser.HappyAbsSyn
                                                      t4
                                                      t5
                                                      t6
                                                      t7
                                                      t8
                                                      t9
                                                      t10
                                                      t11
                                                      t12
                                                      t13
                                                      t14
                                                      t15
                                                      t16
                                                      t17
                                                      t18
                                                      t19
                                                      t20
                                                      t21
                                                      t22
                                                      t23
                                                      t24
                                                      t25
                                                      t26
                                                      t27
                                                      t28)) -}
26614c7dc4d2b3a477db1bd6be133697
  happyInTok ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Lexer.LToken
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Lexer.LToken) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Lexer.LToken>_R
                 ->_R UnsafeCo representational Lexer.LToken (Parser.HappyAbsSyn
                                                                t4
                                                                t5
                                                                t6
                                                                t7
                                                                t8
                                                                t9
                                                                t10
                                                                t11
                                                                t12
                                                                t13
                                                                t14
                                                                t15
                                                                t16
                                                                t17
                                                                t18
                                                                t19
                                                                t20
                                                                t21
                                                                t22
                                                                t23
                                                                t24
                                                                t25
                                                                t26
                                                                t27
                                                                t28)) -}
e5f1d1edf13b773b690538e738a0a0b5
  happyMonad2Reduce ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (Parser.HappyStk
          (Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
        -> Lexer.L Lexer.Token
        -> Control.Monad.Trans.State.Lazy.StateT
             Parser.PState
             (Data.Either.Either GHC.Base.String)
             (Parser.HappyAbsSyn
                Parser.P2Result
                [Parser.PDecl]
                Parser.PDecl
                Parser.PDecl
                [Parser.Pat]
                Parser.Pat
                Parser.Pat
                Parser.PGuards
                [(Parser.PExpr, Parser.PExpr)]
                (Parser.PExpr, Parser.PExpr)
                [Parser.PExpr]
                Parser.PExpr
                Parser.PExpr
                Parser.PFType
                Parser.PFType
                Parser.PDecl
                Parser.PFType
                Parser.PFType
                Parser.PFType
                [Lexer.LToken]
                [Parser.PConstr]
                Parser.PConstr
                Parser.PDecl
                [Parser.PFType]
                [Parser.PFType]))
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 8,
     Strictness: <L,U><L,U><L,1*C1(C1(U))><S,1*U><L,U><S,U><L,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U))))))))><L,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U)))))))))>,
     Unfolding: (\ (k :: GHC.Prim.Int#)
                   (nt :: GHC.Prim.Int#)
                   (fn :: Parser.HappyStk
                            (Parser.HappyAbsSyn
                               Parser.P2Result
                               [Parser.PDecl]
                               Parser.PDecl
                               Parser.PDecl
                               [Parser.Pat]
                               Parser.Pat
                               Parser.Pat
                               Parser.PGuards
                               [(Parser.PExpr, Parser.PExpr)]
                               (Parser.PExpr, Parser.PExpr)
                               [Parser.PExpr]
                               Parser.PExpr
                               Parser.PExpr
                               Parser.PFType
                               Parser.PFType
                               Parser.PDecl
                               Parser.PFType
                               Parser.PFType
                               Parser.PFType
                               [Lexer.LToken]
                               [Parser.PConstr]
                               Parser.PConstr
                               Parser.PDecl
                               [Parser.PFType]
                               [Parser.PFType])
                          -> Lexer.L Lexer.Token
                          -> Control.Monad.Trans.State.Lazy.StateT
                               Parser.PState
                               (Data.Either.Either GHC.Base.String)
                               (Parser.HappyAbsSyn
                                  Parser.P2Result
                                  [Parser.PDecl]
                                  Parser.PDecl
                                  Parser.PDecl
                                  [Parser.Pat]
                                  Parser.Pat
                                  Parser.Pat
                                  Parser.PGuards
                                  [(Parser.PExpr, Parser.PExpr)]
                                  (Parser.PExpr, Parser.PExpr)
                                  [Parser.PExpr]
                                  Parser.PExpr
                                  Parser.PExpr
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PDecl
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PFType
                                  [Lexer.LToken]
                                  [Parser.PConstr]
                                  Parser.PConstr
                                  Parser.PDecl
                                  [Parser.PFType]
                                  [Parser.PFType]))
                   (ds :: GHC.Prim.Int#)
                   (tk :: Lexer.L Lexer.Token)
                   (st :: GHC.Prim.Int#)
                   (sts :: Parser.Happy_IntList)
                   (stk :: Parser.HappyStk
                             (Parser.HappyAbsSyn
                                Parser.P2Result
                                [Parser.PDecl]
                                Parser.PDecl
                                Parser.PDecl
                                [Parser.Pat]
                                Parser.Pat
                                Parser.Pat
                                Parser.PGuards
                                [(Parser.PExpr, Parser.PExpr)]
                                (Parser.PExpr, Parser.PExpr)
                                [Parser.PExpr]
                                Parser.PExpr
                                Parser.PExpr
                                Parser.PFType
                                Parser.PFType
                                Parser.PDecl
                                Parser.PFType
                                Parser.PFType
                                Parser.PFType
                                [Lexer.LToken]
                                [Parser.PConstr]
                                Parser.PConstr
                                Parser.PDecl
                                [Parser.PFType]
                                [Parser.PFType])) ->
                 case ds of ds1 {
                   DEFAULT
                   -> case Parser.happyDrop
                             k
                             (Parser.HappyCons st sts) of wild { Parser.HappyCons st1 ds2 ->
                      case Parser.happyGotoOffsets of wild1 { Parser.HappyA# arr ->
                      case Parser.happyTable of wild2 { Parser.HappyA# arr1 ->
                      let {
                        off' :: GHC.Prim.Int# = GHC.Prim.*# st1 2#
                      } in
                      case GHC.Prim.indexCharOffAddr# arr off' of wild3 { DEFAULT ->
                      case GHC.Prim.indexCharOffAddr#
                             arr
                             (GHC.Prim.+# off' 1#) of wild4 { DEFAULT ->
                      let {
                        off'1 :: GHC.Prim.Int#
                        = GHC.Prim.*#
                            (GHC.Prim.+#
                               (GHC.Prim.narrow16Int#
                                  (GHC.Prim.word2Int#
                                     (GHC.Prim.or#
                                        (GHC.Prim.uncheckedShiftL#
                                           (GHC.Prim.int2Word# (GHC.Prim.ord# wild4))
                                           8#)
                                        (GHC.Prim.int2Word# (GHC.Prim.ord# wild3)))))
                               nt)
                            2#
                      } in
                      case GHC.Prim.indexCharOffAddr# arr1 off'1 of wild5 { DEFAULT ->
                      case GHC.Prim.indexCharOffAddr#
                             arr1
                             (GHC.Prim.+# off'1 1#) of wild6 { DEFAULT ->
                      let {
                        new_state :: GHC.Prim.Int#
                        = GHC.Prim.narrow16Int#
                            (GHC.Prim.word2Int#
                               (GHC.Prim.or#
                                  (GHC.Prim.uncheckedShiftL#
                                     (GHC.Prim.int2Word# (GHC.Prim.ord# wild6))
                                     8#)
                                  (GHC.Prim.int2Word# (GHC.Prim.ord# wild5))))
                      } in
                      let {
                        drop_stk :: Parser.HappyStk
                                      (Parser.HappyAbsSyn
                                         Parser.P2Result
                                         [Parser.PDecl]
                                         Parser.PDecl
                                         Parser.PDecl
                                         [Parser.Pat]
                                         Parser.Pat
                                         Parser.Pat
                                         Parser.PGuards
                                         [(Parser.PExpr, Parser.PExpr)]
                                         (Parser.PExpr, Parser.PExpr)
                                         [Parser.PExpr]
                                         Parser.PExpr
                                         Parser.PExpr
                                         Parser.PFType
                                         Parser.PFType
                                         Parser.PDecl
                                         Parser.PFType
                                         Parser.PFType
                                         Parser.PFType
                                         [Lexer.LToken]
                                         [Parser.PConstr]
                                         Parser.PConstr
                                         Parser.PDecl
                                         [Parser.PFType]
                                         [Parser.PFType])
                        = Parser.happyDropStk
                            @ (Parser.HappyAbsSyn
                                 Parser.P2Result
                                 [Parser.PDecl]
                                 Parser.PDecl
                                 Parser.PDecl
                                 [Parser.Pat]
                                 Parser.Pat
                                 Parser.Pat
                                 Parser.PGuards
                                 [(Parser.PExpr, Parser.PExpr)]
                                 (Parser.PExpr, Parser.PExpr)
                                 [Parser.PExpr]
                                 Parser.PExpr
                                 Parser.PExpr
                                 Parser.PFType
                                 Parser.PFType
                                 Parser.PDecl
                                 Parser.PFType
                                 Parser.PFType
                                 Parser.PFType
                                 [Lexer.LToken]
                                 [Parser.PConstr]
                                 Parser.PConstr
                                 Parser.PDecl
                                 [Parser.PFType]
                                 [Parser.PFType])
                            k
                            stk
                      } in
                      let {
                        m :: Control.Monad.Trans.State.Lazy.StateT
                               Parser.PState
                               (Data.Either.Either GHC.Base.String)
                               (Parser.HappyAbsSyn
                                  Parser.P2Result
                                  [Parser.PDecl]
                                  Parser.PDecl
                                  Parser.PDecl
                                  [Parser.Pat]
                                  Parser.Pat
                                  Parser.Pat
                                  Parser.PGuards
                                  [(Parser.PExpr, Parser.PExpr)]
                                  (Parser.PExpr, Parser.PExpr)
                                  [Parser.PExpr]
                                  Parser.PExpr
                                  Parser.PExpr
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PDecl
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PFType
                                  [Lexer.LToken]
                                  [Parser.PConstr]
                                  Parser.PConstr
                                  Parser.PDecl
                                  [Parser.PFType]
                                  [Parser.PFType])
                        = fn stk tk
                      } in
                      (\ (tks :: [Lexer.LToken]) (s1 :: Parser.PState) ->
                       case m `cast`
                            (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Parser.PState>_N
                                 <Data.Either.Either GHC.Base.String>_R
                                 <Parser.HappyAbsSyn
                                    Parser.P2Result
                                    [Parser.PDecl]
                                    Parser.PDecl
                                    Parser.PDecl
                                    [Parser.Pat]
                                    Parser.Pat
                                    Parser.Pat
                                    Parser.PGuards
                                    [(Parser.PExpr, Parser.PExpr)]
                                    (Parser.PExpr, Parser.PExpr)
                                    [Parser.PExpr]
                                    Parser.PExpr
                                    Parser.PExpr
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PDecl
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PFType
                                    [Lexer.LToken]
                                    [Parser.PConstr]
                                    Parser.PConstr
                                    Parser.PDecl
                                    [Parser.PFType]
                                    [Parser.PFType]>_N)
                              s1 of wild7 {
                         Data.Either.Left l -> wild7
                         Data.Either.Right r1
                         -> (Parser.happyNewToken
                               new_state
                               wild
                               (Parser.HappyStk
                                  @ (Parser.HappyAbsSyn
                                       Parser.P2Result
                                       [Parser.PDecl]
                                       Parser.PDecl
                                       Parser.PDecl
                                       [Parser.Pat]
                                       Parser.Pat
                                       Parser.Pat
                                       Parser.PGuards
                                       [(Parser.PExpr, Parser.PExpr)]
                                       (Parser.PExpr, Parser.PExpr)
                                       [Parser.PExpr]
                                       Parser.PExpr
                                       Parser.PExpr
                                       Parser.PFType
                                       Parser.PFType
                                       Parser.PDecl
                                       Parser.PFType
                                       Parser.PFType
                                       Parser.PFType
                                       [Lexer.LToken]
                                       [Parser.PConstr]
                                       Parser.PConstr
                                       Parser.PDecl
                                       [Parser.PFType]
                                       [Parser.PFType])
                                  (case r1 of wild8 { (,) a1 s' -> a1 })
                                  drop_stk)
                               tks)
                              `cast`
                            (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Parser.PState>_N
                                 <Data.Either.Either GHC.Base.String>_R
                                 <Parser.HappyAbsSyn
                                    Parser.P2Result
                                    [Parser.PDecl]
                                    Parser.PDecl
                                    Parser.PDecl
                                    [Parser.Pat]
                                    Parser.Pat
                                    Parser.Pat
                                    Parser.PGuards
                                    [(Parser.PExpr, Parser.PExpr)]
                                    (Parser.PExpr, Parser.PExpr)
                                    [Parser.PExpr]
                                    Parser.PExpr
                                    Parser.PExpr
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PDecl
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PFType
                                    [Lexer.LToken]
                                    [Parser.PConstr]
                                    Parser.PConstr
                                    Parser.PDecl
                                    [Parser.PFType]
                                    [Parser.PFType]>_N)
                              (case r1 of wild8 { (,) a1 s' -> s' }) })
                        `cast`
                      (<[Lexer.LToken]>_R
                       ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                     <Parser.PState>_N
                                     <Data.Either.Either GHC.Base.String>_R
                                     <Parser.HappyAbsSyn
                                        Parser.P2Result
                                        [Parser.PDecl]
                                        Parser.PDecl
                                        Parser.PDecl
                                        [Parser.Pat]
                                        Parser.Pat
                                        Parser.Pat
                                        Parser.PGuards
                                        [(Parser.PExpr, Parser.PExpr)]
                                        (Parser.PExpr, Parser.PExpr)
                                        [Parser.PExpr]
                                        Parser.PExpr
                                        Parser.PExpr
                                        Parser.PFType
                                        Parser.PFType
                                        Parser.PDecl
                                        Parser.PFType
                                        Parser.PFType
                                        Parser.PFType
                                        [Lexer.LToken]
                                        [Parser.PConstr]
                                        Parser.PConstr
                                        Parser.PDecl
                                        [Parser.PFType]
                                        [Parser.PFType]>_N)) } } } } } } }
                   0# -> Parser.happyFail 0# tk st sts stk }) -}
ffd6c49e207f36df0483c4c7e992550a
  happyMonadReduce ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (Parser.HappyStk
          (Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
        -> Lexer.L Lexer.Token
        -> Control.Monad.Trans.State.Lazy.StateT
             Parser.PState
             (Data.Either.Either GHC.Base.String)
             (Parser.HappyAbsSyn
                Parser.P2Result
                [Parser.PDecl]
                Parser.PDecl
                Parser.PDecl
                [Parser.Pat]
                Parser.Pat
                Parser.Pat
                Parser.PGuards
                [(Parser.PExpr, Parser.PExpr)]
                (Parser.PExpr, Parser.PExpr)
                [Parser.PExpr]
                Parser.PExpr
                Parser.PExpr
                Parser.PFType
                Parser.PFType
                Parser.PDecl
                Parser.PFType
                Parser.PFType
                Parser.PFType
                [Lexer.LToken]
                [Parser.PConstr]
                Parser.PConstr
                Parser.PDecl
                [Parser.PFType]
                [Parser.PFType]))
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 8,
     Strictness: <L,U><L,U><L,1*C1(C1(U))><S,1*U><L,U><S,U><L,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U))))))))><L,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U)))))))))>,
     Inline: NOINLINE -}
a74d39a7cde7920589c5303e05d4f188
  happyNewToken ::
    GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U> -}
c752e4b9fd2e3913f7eb31fd2db1fa1f
  happyOut10 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t10
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t10) -}
90c2136f28d7ec806263d11d1cf1303b
  happyOut11 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t11
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t11) -}
16908030ae61f5de6dc2a271d1697e19
  happyOut12 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t12
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t12) -}
fb4016f80c4372b56ff95171bc59963e
  happyOut13 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t13
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t13) -}
b0a79707fd57aa26eeb3efad50a8b6b1
  happyOut14 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t14
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t14) -}
dc9273c3b7b7c2819307f35cb420a89d
  happyOut15 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t15
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t15) -}
3054ed4342a18cbe0477b5c14f14e052
  happyOut16 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t16
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t16) -}
ddcdd0ff031c439d4b7452955d159c79
  happyOut17 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t17
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t17) -}
ff850f14a369a2890765e8af772378d4
  happyOut18 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t18
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t18) -}
d24a836040d4970dea74d3b25fce13cf
  happyOut19 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t19
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t19) -}
1020bc3eda62c9f139dc662dbce1b23d
  happyOut20 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t20
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t20) -}
4bd9834440ec618559e0fd8e811cf777
  happyOut21 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t21
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t21) -}
4feaa21001a13b48bba198f14ebc106f
  happyOut22 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t22
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t22) -}
6f6e0b3032176e2171352b1595b2da13
  happyOut23 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t23
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t23) -}
c5498bae8e1dc9cc64d919ab256862d1
  happyOut24 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t24
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t24) -}
ee9bcdd636f754a5999226ee7270d059
  happyOut25 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t25
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t25) -}
e8a779d6395ac5fb1dd3664d0c345c28
  happyOut26 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t26
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t26) -}
78cb48886d83e27939ef6c0b7fd2d9d9
  happyOut27 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t27
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t27) -}
951e82a0640b19bacac6abe2d768d343
  happyOut28 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t28) -}
9f9820befbd50fc6f8b4acc7337c7931
  happyOut4 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t4
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t4) -}
af06a7b640e94c31e41f1edb0d8b9bfe
  happyOut5 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t5
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t5) -}
944fc862668dbd8219b1510f0eab0099
  happyOut6 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t6
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t6) -}
80f562eba4e6d293677fadc197fb11fd
  happyOut7 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t7
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t7) -}
8dc0d97c3f7637a061a7931175bd8365
  happyOut8 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t8
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t8) -}
a7016c6e87d7dd423439055aaeef4842
  happyOut9 ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> t9
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) t9) -}
4d61f92ecc353e63d96141081ee55fe5
  happyOutTok ::
    forall t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Lexer.LToken
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ t4
                   @ t5
                   @ t6
                   @ t7
                   @ t8
                   @ t9
                   @ t10
                   @ t11
                   @ t12
                   @ t13
                   @ t14
                   @ t15
                   @ t16
                   @ t17
                   @ t18
                   @ t19
                   @ t20
                   @ t21
                   @ t22
                   @ t23
                   @ t24
                   @ t25
                   @ t26
                   @ t27
                   @ t28
                   (x :: Parser.HappyAbsSyn
                           t4
                           t5
                           t6
                           t7
                           t8
                           t9
                           t10
                           t11
                           t12
                           t13
                           t14
                           t15
                           t16
                           t17
                           t18
                           t19
                           t20
                           t21
                           t22
                           t23
                           t24
                           t25
                           t26
                           t27
                           t28) ->
                 x)
                  `cast`
                (forall (t4 :: <*>_N) (t5 :: <*>_N) (t6 :: <*>_N) (t7 :: <*>_N) (t8 :: <*>_N) (t9 :: <*>_N) (t10 :: <*>_N) (t11 :: <*>_N) (t12 :: <*>_N) (t13 :: <*>_N) (t14 :: <*>_N) (t15 :: <*>_N) (t16 :: <*>_N) (t17 :: <*>_N) (t18 :: <*>_N) (t19 :: <*>_N) (t20 :: <*>_N) (t21 :: <*>_N) (t22 :: <*>_N) (t23 :: <*>_N) (t24 :: <*>_N) (t25 :: <*>_N) (t26 :: <*>_N) (t27 :: <*>_N) (t28 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational (Parser.HappyAbsSyn
                                                   t4
                                                   t5
                                                   t6
                                                   t7
                                                   t8
                                                   t9
                                                   t10
                                                   t11
                                                   t12
                                                   t13
                                                   t14
                                                   t15
                                                   t16
                                                   t17
                                                   t18
                                                   t19
                                                   t20
                                                   t21
                                                   t22
                                                   t23
                                                   t24
                                                   t25
                                                   t26
                                                   t27
                                                   t28) Lexer.LToken) -}
d8d1d9b709316985c775926c8cfb323b
  happyParse ::
    GHC.Prim.Int#
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 2, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (start_state :: GHC.Prim.Int#) (eta :: [Lexer.LToken]) ->
                 Parser.happyNewToken
                   start_state
                   (Parser.notHappyAtAll @ Parser.Happy_IntList)
                   (Parser.notHappyAtAll
                      @ (Parser.HappyStk
                           (Parser.HappyAbsSyn
                              Parser.P2Result
                              [Parser.PDecl]
                              Parser.PDecl
                              Parser.PDecl
                              [Parser.Pat]
                              Parser.Pat
                              Parser.Pat
                              Parser.PGuards
                              [(Parser.PExpr, Parser.PExpr)]
                              (Parser.PExpr, Parser.PExpr)
                              [Parser.PExpr]
                              Parser.PExpr
                              Parser.PExpr
                              Parser.PFType
                              Parser.PFType
                              Parser.PDecl
                              Parser.PFType
                              Parser.PFType
                              Parser.PFType
                              [Lexer.LToken]
                              [Parser.PConstr]
                              Parser.PConstr
                              Parser.PDecl
                              [Parser.PFType]
                              [Parser.PFType])))
                   eta) -}
94d0a809d71d52111fcd06a01f0698e7
  happyReduce ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (Parser.HappyStk
          (Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
        -> Parser.HappyStk
             (Parser.HappyAbsSyn
                Parser.P2Result
                [Parser.PDecl]
                Parser.PDecl
                Parser.PDecl
                [Parser.Pat]
                Parser.Pat
                Parser.Pat
                Parser.PGuards
                [(Parser.PExpr, Parser.PExpr)]
                (Parser.PExpr, Parser.PExpr)
                [Parser.PExpr]
                Parser.PExpr
                Parser.PExpr
                Parser.PFType
                Parser.PFType
                Parser.PDecl
                Parser.PFType
                Parser.PFType
                Parser.PFType
                [Lexer.LToken]
                [Parser.PConstr]
                Parser.PConstr
                Parser.PDecl
                [Parser.PFType]
                [Parser.PFType]))
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 8,
     Strictness: <L,U><L,U><L,1*C1(U(U,U))><S,1*U><L,U><L,U><L,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U(U,U)))))))))><L,U(U,U)>,
     Inline: NOINLINE -}
bb88cba2a345e223681205e6f3583c44
  happyReduceArr ::
    GHC.Arr.Array
      GHC.Types.Int
      (GHC.Prim.Int#
       -> Lexer.L Lexer.Token
       -> GHC.Prim.Int#
       -> Parser.Happy_IntList
       -> Parser.HappyStk
            (Parser.HappyAbsSyn
               Parser.P2Result
               [Parser.PDecl]
               Parser.PDecl
               Parser.PDecl
               [Parser.Pat]
               Parser.Pat
               Parser.Pat
               Parser.PGuards
               [(Parser.PExpr, Parser.PExpr)]
               (Parser.PExpr, Parser.PExpr)
               [Parser.PExpr]
               Parser.PExpr
               Parser.PExpr
               Parser.PFType
               Parser.PFType
               Parser.PDecl
               Parser.PFType
               Parser.PFType
               Parser.PFType
               [Lexer.LToken]
               [Parser.PConstr]
               Parser.PConstr
               Parser.PDecl
               [Parser.PFType]
               [Parser.PFType])
       -> [Lexer.LToken]
       -> Parser.P
            (Parser.HappyAbsSyn
               Parser.P2Result
               [Parser.PDecl]
               Parser.PDecl
               Parser.PDecl
               [Parser.Pat]
               Parser.Pat
               Parser.Pat
               Parser.PGuards
               [(Parser.PExpr, Parser.PExpr)]
               (Parser.PExpr, Parser.PExpr)
               [Parser.PExpr]
               Parser.PExpr
               Parser.PExpr
               Parser.PFType
               Parser.PFType
               Parser.PDecl
               Parser.PFType
               Parser.PFType
               Parser.PFType
               [Lexer.LToken]
               [Parser.PConstr]
               Parser.PConstr
               Parser.PDecl
               [Parser.PFType]
               [Parser.PFType]))
172fe54deed8b0637dec87efc9c0fb38
  happyReduce_1 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
407d9b131fc241e8eccb702b1ad59d00
  happyReduce_10 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
3e2a96fc98f19b3c800a30a233186922
  happyReduce_11 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
b67392d92f79644b95427a495832a978
  happyReduce_12 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
9fce5d97a438feee2d821927c86a4a50
  happyReduce_13 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_17) -}
01e8ecaae7c350fb0770e016a19b310f
  happyReduce_14 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_17) -}
98ecdb5487433e36833c1720652a9d11
  happyReduce_15 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_17) -}
3e7ebf7fe4083fb0b6209fadab593e43
  happyReduce_16 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_17) -}
094b070e1d74b4792ef0513cd14d5285
  happyReduce_17 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
6cce5726d601c7bbe14b3c57796e0657
  happyReduce_18 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
ef00af0c11776d9caa1c635d520cb12a
  happyReduce_19 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
b2ac8ec1f961a762c9231e67bb4d13f7
  happyReduce_2 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
cd7e60b64ded9c35dd39e1141818d14a
  happyReduce_20 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
24a424361153213535ba8f68ad470018
  happyReduce_21 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
c9e0471606115b791cf6fc75a9c505d1
  happyReduce_22 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
c9d14ae7c768f33d14f8679a7ec2095b
  happyReduce_23 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
7c7c567de75baa8161ac45a052b59315
  happyReduce_24 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
ec293e6bd9d1fcc4dbeccb674ae647f1
  happyReduce_25 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
fcd381f57402d2e339498de9f0e40593
  happyReduce_26 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
91430573ec9692e9300572263b3ae3f0
  happyReduce_27 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
7ec86acfc722677cd22e5b178d67c424
  happyReduce_28 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
85ffb9b5c9e17ebd34e5af64ae95e0cf
  happyReduce_29 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
fd39543a1993e33c993c02eee99f34d8
  happyReduce_3 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
61e8adff8ecae427924a7e7a2b1de23e
  happyReduce_30 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_31) -}
b45fb2e4f1ab8b164749c3c9569db6d7
  happyReduce_31 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
44672f0af9e828058c44a2d18096e6fe
  happyReduce_32 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
81930303ccfea24df1c06f9bf78e5d52
  happyReduce_33 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_37) -}
0684e57e4ed321405413c6a9e7f90f6f
  happyReduce_34 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_37) -}
ca9a036a7d4fc3aade12bb6c713d3016
  happyReduce_35 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_37) -}
2a05efc3f9a29741c1bc4e41d4a1d20c
  happyReduce_36 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_37) -}
7ad6745dfe49599ea63939f1d19d57ae
  happyReduce_37 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
1a7e825458bbd7e01b670a29a9bde5b3
  happyReduce_38 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
378f5aa1a68a233ceec827d60cc23534
  happyReduce_39 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_40) -}
1634142a696ca70ddfaa310382dc9245
  happyReduce_4 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
15a4c77ea83843606aecf40fea606098
  happyReduce_40 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
557e087ce075b0556ba01b26f506841a
  happyReduce_41 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
e817e08c87421d188207421aecef4e70
  happyReduce_42 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_44) -}
bc145309e864333f29edbf34654c3ced
  happyReduce_43 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_44) -}
461ab669c73124c299c8043ff891e329
  happyReduce_44 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
4cf5ee40e65b0f68a0fc5e5f921054e5
  happyReduce_45 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
166babffe2c1c4a0347e055a00e3bb58
  happyReduce_46 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
d34cd80891120ff59460b1af4eefca0c
  happyReduce_47 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
fdba2c67cca16cd304af63a28752e591
  happyReduce_48 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
1b808718f35fb32ec5ec3260a837154f
  happyReduce_49 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_50) -}
b96650df4a754e16e6333f37a3a46d9d
  happyReduce_5 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
2a4bb20a2130738e2dc09a71b4b6bd88
  happyReduce_50 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
d72152937acdb19988347077bd34b912
  happyReduce_51 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
22133e685886f061ec5850e054ad5184
  happyReduce_52 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_54) -}
46f3d4a1a8c30c3e6632e4347bb8b809
  happyReduce_53 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_54) -}
fac364a44813280b7c65f7ee6e7ec8dd
  happyReduce_54 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
4a828423915b702dce115da9839b015c
  happyReduce_55 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
e3385a1cb0f6bad7c51a1e8a298692bc
  happyReduce_56 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
583eccbe31ce09cad95ae7d0814dfd13
  happyReduce_57 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
77e6f6774a58497bcca0e0d7947278e5
  happyReduce_58 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
edfb833bc3b1a490a6212223b01527c9
  happyReduce_59 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
e58c5fe559bed95bc4a54e7e04611ee9
  happyReduce_6 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
b4094fda1f2ca319baa50015ed9db574
  happyReduce_60 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
052dfa69f5cc8d5d1c2841c3dda1cc3b
  happyReduce_61 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
0164c4f5bc83968f5711fd8d1d8d906a
  happyReduce_62 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
87f0bc2fdbe672b3526361e6d8ebef7a
  happyReduce_63 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
fe457cbfab1ec41d583aa1d418f6b929
  happyReduce_64 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
bc455f0728decc18bb2614263c5d484e
  happyReduce_65 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
859caa8e5e0cd33beee2a3c4757775bc
  happyReduce_66 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
dc0d9769542c9debb62b1804a4b8ac2b
  happyReduce_67 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
30a260d4b5ad76b5506688cfad00233b
  happyReduce_7 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_6) -}
77afcb877e55867ca00d73033dfacd32
  happyReduce_8 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5, Unfolding: (Parser.happyReduce_6) -}
6aae0c6f9264a1982fc0d470aa741d43
  happyReduce_9 ::
    GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 5 -}
6615608a376968c0a987a1aa2d4f0ac4
  happyReduction_1 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t1} {t2} {t3} {t4} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      [Parser.PDecl]
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t4
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         Parser.P2Result
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_79
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t4 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    [Parser.PDecl]
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t4
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational Parser.P2Result (Parser.HappyAbsSyn
                                                                   Parser.P2Result
                                                                   t5
                                                                   t6
                                                                   t7
                                                                   t8
                                                                   t9
                                                                   t10
                                                                   t11
                                                                   t12
                                                                   t13
                                                                   t14
                                                                   t15
                                                                   t16
                                                                   t17
                                                                   t18
                                                                   t19
                                                                   t20
                                                                   t21
                                                                   t22
                                                                   t23
                                                                   t24
                                                                   t25
                                                                   t26
                                                                   t27
                                                                   t28)) -}
5785b970018b49c338a0c62c935130e6
  happyReduction_10 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {a} {t8} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t8
      a
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         [a]
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         [a]
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_80
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (a :: <*>_N) (t8 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t8
                    a
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         [a]
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       [a]
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
0d457bb69f6d70f8a99eb22e5a7e045c
  happyReduction_100 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      Parser.PFType
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.PDecl
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   Parser.PFType
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PFType
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t76
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 Parser.PFType
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53) Parser.PFType)) -}
a26c58c816c21ba97fafd6773d90079b
  happyReduction_101 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t20} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      Parser.PFType
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
    -> t
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t20
         Parser.PFType
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.PFType
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t20
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   Parser.PFType
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53
                                   t52)
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t20
                                   Parser.PFType
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 Parser.PTArrow
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t20
                                                 Parser.PFType
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) Parser.PFType)
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 Parser.PFType
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53
                                                 t52) Parser.PFType)) -}
e8048dc866761b81b23ee11c56aaf07f
  happyReduction_102 ::
    forall {t28} {t27} {t26} {t25} {t24} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t23} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t23
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         [Lexer.LToken]
         t33
         t32
         t3
         t2
         t1
    -> [Lexer.LToken]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t23
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t23
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   [Lexer.LToken]
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ Lexer.LToken
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t76
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t23
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53) Lexer.LToken)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t52
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 [Lexer.LToken]
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) [Lexer.LToken])) -}
e032f57a176563bb24e9af1610d559d6
  happyReduction_103 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> [Lexer.LToken]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 GHC.Types.:
                   @ Lexer.LToken
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   (GHC.Types.[] @ Lexer.LToken)) -}
7bb458e9685919916529e3941bf757d0
  happyReduction_104 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {a} {t24} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t24
      a
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         [a]
         t32
         t3
         t2
         t1
    -> [a]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t
                   @ t53
                   @ t54
                   @ t55
                   @ a
                   @ t24
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t24
                                   a
                                   t55
                                   t54
                                   t53)
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   [a]
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t24
                                                 a
                                                 t55
                                                 t54
                                                 t53) a)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t52
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 [a]
                                                 t32
                                                 t3
                                                 t2
                                                 t1) [a])) -}
b39e388b71330732afe2f5218ba4a5e8
  happyReduction_105 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t} {t24} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t24
      t
      t3
      t2
      t1
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t
                   @ t24
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t24
                                   t
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t24
                                                 t
                                                 t3
                                                 t2
                                                 t1) t)
                   (GHC.Types.[] @ t)) -}
86d6b4106358bf68390346a93765a404
  happyReduction_106 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      [Parser.PFType]
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.PConstr
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   [Parser.PFType]
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PConstr
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t76
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 [Parser.PFType]
                                                 t53) [Parser.PFType])) -}
9cad9c8cfdb3dbe6a5ca9557255d5b96
  happyReduction_107 ::
    forall {t28} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t27} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {a} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [a]
      t52
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         a
         t33
         t32
         t3
         t2
         t27
         t1
    -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t27
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ a
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53
                                   [a]
                                   t52)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   a
                                   t33
                                   t32
                                   t3
                                   t2
                                   t27
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 a
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t27
                                                 t1) a)
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53
                                                 [a]
                                                 t52) [a])) -}
8fec21c7e23576d26ecb7df5c21eeed4
  happyReduction_108 ::
    forall {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t28} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {a} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
      [a]
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         a
         t33
         t32
         t3
         t2
         t1
         t28
    -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, True)
                (\ @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t28
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ a
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53
                                   t52
                                   [a])
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   a
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1
                                   t28) ->
                 GHC.Types.:
                   @ a
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 a
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1
                                                 t28) a)
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53
                                                 t52
                                                 [a]) [a])) -}
c0f6db74c898ff4acd663fbc85060ff2
  happyReduction_109 ::
    forall {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t28} {t1} {t2} {t3} {t32} {t33} {t} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t
      t33
      t32
      t3
      t2
      t1
      t28
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t28
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1
                                   t28) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1
                                                 t28) t)
                   (GHC.Types.[] @ t)) -}
8c4a4828ce86ca8a8564f95dbbb1ea5c
  happyReduction_11 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t} {t8} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t8
      t
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         [t]
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_81
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t :: <*>_N) (t8 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t8
                    t
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       [t]
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
286e0b8e1fe53c54bcf602e4ffddbb3a
  happyReduction_110 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76} {t77} {t78} {t79} {t80} {t81} {t82} {t83} {t84} {t85} {t86} {t87} {t88} {t89} {t90} {t91} {t92} {t93} {t94} {t95} {t96} {t97} {t98} {t99} {t100}.
    Parser.HappyAbsSyn
      t100
      t99
      t98
      t97
      t96
      t95
      t94
      Parser.PGuards
      t93
      t92
      t91
      t90
      t89
      t88
      t87
      t86
      t85
      t84
      t83
      t82
      t81
      t80
      t79
      t78
      t77
    -> Parser.HappyAbsSyn
         t76
         t75
         t74
         t73
         [Parser.Pat]
         t72
         t71
         t70
         t69
         t68
         t67
         t66
         t65
         t64
         t63
         t62
         t61
         t60
         t59
         t58
         t57
         t56
         t55
         t54
         t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.PDecl
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U><L,U>m1,
     Unfolding: InlineRule (3, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   @ t77
                   @ t78
                   @ t79
                   @ t80
                   @ t81
                   @ t82
                   @ t83
                   @ t84
                   @ t85
                   @ t86
                   @ t87
                   @ t88
                   @ t89
                   @ t90
                   @ t91
                   @ t92
                   @ t93
                   @ t94
                   @ t95
                   @ t96
                   @ t97
                   @ t98
                   @ t99
                   @ t100
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t100
                                   t99
                                   t98
                                   t97
                                   t96
                                   t95
                                   t94
                                   Parser.PGuards
                                   t93
                                   t92
                                   t91
                                   t90
                                   t89
                                   t88
                                   t87
                                   t86
                                   t85
                                   t84
                                   t83
                                   t82
                                   t81
                                   t80
                                   t79
                                   t78
                                   t77)
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   [Parser.Pat]
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PFunc
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   (GHC.List.reverse1
                      @ Parser.Pat
                      happy_x_2
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t76
                                                    t75
                                                    t74
                                                    t73
                                                    [Parser.Pat]
                                                    t72
                                                    t71
                                                    t70
                                                    t69
                                                    t68
                                                    t67
                                                    t66
                                                    t65
                                                    t64
                                                    t63
                                                    t62
                                                    t61
                                                    t60
                                                    t59
                                                    t58
                                                    t57
                                                    t56
                                                    t55
                                                    t54
                                                    t53) [Parser.Pat])
                      (GHC.Types.[] @ Parser.Pat))
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t100
                                                 t99
                                                 t98
                                                 t97
                                                 t96
                                                 t95
                                                 t94
                                                 Parser.PGuards
                                                 t93
                                                 t92
                                                 t91
                                                 t90
                                                 t89
                                                 t88
                                                 t87
                                                 t86
                                                 t85
                                                 t84
                                                 t83
                                                 t82
                                                 t81
                                                 t80
                                                 t79
                                                 t78
                                                 t77) Parser.PGuards)) -}
a9666d413cf0577eb89daf3cdb2570af
  happyReduction_12 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t} {t7} {t6} {t5} {t4}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      [t]
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t
                   @ t7
                   @ t6
                   @ t5
                   @ t4 ->
                 GHC.Types.[] @ t)
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N).
                 UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                  t4
                                                  t5
                                                  t6
                                                  t7
                                                  [t]
                                                  t9
                                                  t10
                                                  t11
                                                  t12
                                                  t13
                                                  t14
                                                  t15
                                                  t16
                                                  t17
                                                  t18
                                                  t19
                                                  t20
                                                  t21
                                                  t22
                                                  t23
                                                  t24
                                                  t25
                                                  t26
                                                  t27
                                                  t28)) -}
d67c8df26b3f9b829fe845bd18365552
  happyReduction_13 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         Parser.Pat
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_82
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              Parser.Pat
                                                              t47
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
c6211829b811205e23d8e2cdf5a4572c
  happyReduction_14 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         Parser.Pat
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_82
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              Parser.Pat
                                                              t47
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
d5a056030ef3bb1c3b9b7ed3e3184893
  happyReduction_15 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         Parser.Pat
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_82
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              Parser.Pat
                                                              t47
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
ddf47a16bafbdf3a639499319c0c2352
  happyReduction_16 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         Parser.Pat
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_82
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              Parser.Pat
                                                              t47
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
05e448b0038baf2838f07d3edd7f937a
  happyReduction_17 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         Parser.Pat
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_82
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              Parser.Pat
                                                              t47
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
14f4ec7e390c21cb3dc7418167d5137d
  happyReduction_18 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t9} {t47} {t48} {t49} {t50} {t51} {t52} {t53}.
    t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t9
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_83
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t9 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N).
                 <t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t9
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R <t>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t9, t10>
                         <t46, t11>
                         <t45, t12>
                         <t44, t13>
                         <t43, t14>
                         <t42, t15>
                         <t41, t16>
                         <t40, t17>
                         <t39, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
39d0c655f99f46fbad0eb97f53186110
  happyReduction_19 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      [Parser.Pat]
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         Parser.Pat
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_84
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    [Parser.Pat]
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.Pat (Parser.HappyAbsSyn
                                                              t52
                                                              t51
                                                              t50
                                                              t49
                                                              t48
                                                              t47
                                                              Parser.Pat
                                                              t46
                                                              t45
                                                              t44
                                                              t43
                                                              t42
                                                              t41
                                                              t40
                                                              t39
                                                              t38
                                                              t37
                                                              t36
                                                              t35
                                                              t34
                                                              t33
                                                              t32
                                                              t3
                                                              t2
                                                              t1)) -}
03f2d37908dd75285682d882ecfa5610
  happyReduction_2 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t4} {t1} {t2} {t3} {t5} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {a} {t76} {t77}.
    Parser.HappyAbsSyn
      t77
      t76
      a
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
    -> t
    -> Parser.HappyAbsSyn
         t53
         [a]
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t5
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         [a]
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_85
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t5 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (a :: <*>_N) (t76 :: <*>_N) (t77 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t77
                    t76
                    a
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t53
                         [a]
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t5
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       [a]
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
56fdbe45dd335e84a0ac863a416e9557
  happyReduction_20 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t10} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t10
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t47
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t10 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t10
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t47>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t35, t21>
                         <t34, t22>
                         <t33, t23>
                         <t32, t24>
                         <t10, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
3e5b0f2800e5112b332e73ff1a024d8d
  happyReduction_21 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t11} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t11
      t44
      t43
      t42
      Parser.PExpr
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         Parser.PGuards
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,A>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_87
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t11 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t11
                    t44
                    t43
                    t42
                    Parser.PExpr
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R <t>_R
                 ->_R UnsafeCo representational Parser.PGuards (Parser.HappyAbsSyn
                                                                  t4
                                                                  t5
                                                                  t6
                                                                  t7
                                                                  t8
                                                                  t9
                                                                  t10
                                                                  Parser.PGuards
                                                                  t12
                                                                  t13
                                                                  t14
                                                                  t15
                                                                  t16
                                                                  t17
                                                                  t18
                                                                  t19
                                                                  t20
                                                                  t21
                                                                  t22
                                                                  t23
                                                                  t24
                                                                  t25
                                                                  t26
                                                                  t27
                                                                  t28)) -}
8dd9ec0a0d8e1abe74a19ec4537eda12
  happyReduction_22 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t11} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t11
      [(Parser.PExpr, Parser.PExpr)]
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         Parser.PGuards
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,A>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_88
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t11 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t11
                    [(Parser.PExpr, Parser.PExpr)]
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R <t>_R
                 ->_R UnsafeCo representational Parser.PGuards (Parser.HappyAbsSyn
                                                                  t4
                                                                  t5
                                                                  t6
                                                                  t7
                                                                  t8
                                                                  t9
                                                                  t10
                                                                  Parser.PGuards
                                                                  t12
                                                                  t13
                                                                  t14
                                                                  t15
                                                                  t16
                                                                  t17
                                                                  t18
                                                                  t19
                                                                  t20
                                                                  t21
                                                                  t22
                                                                  t23
                                                                  t24
                                                                  t25
                                                                  t26
                                                                  t27
                                                                  t28)) -}
b6e52ea075c1102cfd5c001ff7d5e4d1
  happyReduction_23 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {a} {t12} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t12
      a
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         [a]
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         [a]
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_89
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (a :: <*>_N) (t12 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t12
                    a
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         [a]
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       [a]
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
eadb23ea25f1bf2528b29de4fa16c4f9
  happyReduction_24 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t12} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t}.
    t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t12
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_90
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t12 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t :: <*>_N).
                 <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t12
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t12>_P
                         <t44, t13>
                         <t43, t14>
                         <t42, t15>
                         <t41, t16>
                         <t40, t17>
                         <t39, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
c7ae095656ee132e403fdde69c0afedb
  happyReduction_25 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t} {t12} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t12
      t
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         [t]
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_91
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t :: <*>_N) (t12 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t12
                    t
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       [t]
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
63a77a9d3ee42a59d8bf8ffd6125107b
  happyReduction_26 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t} {t42} {t13} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76} {t77}.
    Parser.HappyAbsSyn
      t77
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t52
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t13
         t42
         t
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         (t, t66)
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_92
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t :: <*>_N) (t42 :: <*>_N) (t13 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N) (t77 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t77
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <t52>_R
                 ->_R <Parser.HappyAbsSyn
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t13
                         t42
                         t
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational (t, t66) (Parser.HappyAbsSyn
                                                            t4
                                                            t5
                                                            t6
                                                            t7
                                                            t8
                                                            t9
                                                            t10
                                                            t11
                                                            t12
                                                            (t, t66)
                                                            t14
                                                            t15
                                                            t16
                                                            t17
                                                            t18
                                                            t19
                                                            t20
                                                            t21
                                                            t22
                                                            t23
                                                            t24
                                                            t25
                                                            t26
                                                            t27
                                                            t28)) -}
6f9474b0f55d4716e72b93502ee672a8
  happyReduction_27 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t14} {t30} {t31} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {a} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73}.
    Parser.HappyAbsSyn
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      a
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
      t51
      t50
    -> Parser.HappyAbsSyn
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         [a]
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t31
         t30
         t14
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         [a]
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_93
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t14 :: <*>_N) (t30 :: <*>_N) (t31 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (a :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    a
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    t52
                    t51
                    t50>_R
                 ->_R <Parser.HappyAbsSyn
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         [a]
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t31
                         t30
                         t14
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       [a]
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
0d0058b5972d2b1f4f943a1b767e5bb0
  happyReduction_28 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t14} {t30} {t31} {t32} {t33} {t34} {t35} {t36} {t37} {t} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49}.
    Parser.HappyAbsSyn
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t
      t37
      t36
      t35
      t34
      t33
      t32
      t31
      t30
      t14
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         [t]
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_94
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t14 :: <*>_N) (t30 :: <*>_N) (t31 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t31
                    t30
                    t14
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       [t]
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
b80db2355517474304393d70117f33ce
  happyReduction_29 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      [t]
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4 ->
                 GHC.Types.[] @ t)
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N).
                 UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                  t4
                                                  t5
                                                  t6
                                                  t7
                                                  t8
                                                  t9
                                                  t10
                                                  t11
                                                  t12
                                                  t13
                                                  [t]
                                                  t15
                                                  t16
                                                  t17
                                                  t18
                                                  t19
                                                  t20
                                                  t21
                                                  t22
                                                  t23
                                                  t24
                                                  t25
                                                  t26
                                                  t27
                                                  t28)) -}
c881a92fed954ba19fd1d608ffa500b9
  happyReduction_3 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t4} {t1} {t2} {t3} {t5} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t}.
    t
    -> Parser.HappyAbsSyn
         t54
         t53
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t5
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t53
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_90
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t5 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t :: <*>_N).
                 <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t54
                         t53
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t5
                         t3
                         t2
                         t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t54, t4>
                         <t53>_P
                         <t52, t6>
                         <t51, t7>
                         <t50, t8>
                         <t49, t9>
                         <t48, t10>
                         <t47, t11>
                         <t46, t12>
                         <t45, t13>
                         <t44, t14>
                         <t43, t15>
                         <t42, t16>
                         <t41, t17>
                         <t40, t18>
                         <t39, t19>
                         <t38, t20>
                         <t37, t21>
                         <t36, t22>
                         <t35, t23>
                         <t34, t24>
                         <t5, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
3d5515d4af46b36b730255f9c606537c
  happyReduction_30 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      [Parser.PExpr]
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         Parser.PExpr
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_95
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    [Parser.PExpr]
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                Parser.PExpr
                                                                t41
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
2e902b7d83a5102c13949b8ac36d0907
  happyReduction_31 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      [Parser.PExpr]
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         Parser.PExpr
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_95
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    [Parser.PExpr]
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                Parser.PExpr
                                                                t41
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
01cba5d8723dd0e979d50c96997d8d15
  happyReduction_32 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t15} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t15
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t15 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t15
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t15, t16>
                         <t40, t17>
                         <t39, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
05a6284df77272ff54737346cdf49c7c
  happyReduction_33 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         Parser.PExpr
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_96
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                Parser.PExpr
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
d6794a89848cd6e2aec09f07ea015fa4
  happyReduction_34 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         Parser.PExpr
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_96
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                Parser.PExpr
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
c9892d26283e662fd396b64fe1e25e3e
  happyReduction_35 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         Parser.PExpr
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_96
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                Parser.PExpr
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
e9e18d5372910b16007fa3bd75be01d8
  happyReduction_36 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         Parser.PExpr
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_96
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                Parser.PExpr
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
d0a85880093743725791a05627d5f3cc
  happyReduction_37 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         Parser.PExpr
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_96
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PExpr (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                Parser.PExpr
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
b055bbbc2055e11a7964f8fb46d10851
  happyReduction_38 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t16} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53}.
    t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t16
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t41
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_83
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t16 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N).
                 <t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t16
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R <t>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t16, t41>
                         <t40, t17>
                         <t39, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
fb02429fc343fa7bf588084097c302cf
  happyReduction_39 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [Parser.PFType]
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         Parser.PFType
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_97
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    [Parser.PFType]>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 Parser.PFType
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
b1debaf99f5141298d00abe6b7f6b954
  happyReduction_4 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t4} {t1} {t2} {t3} {t5} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t} {t52} {t53}.
    Parser.HappyAbsSyn
      t53
      t52
      t
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t5
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         [t]
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_98
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t5 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t53
                    t52
                    t
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t5
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       [t]
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
bd9aae147df59a8d5776cdf2a6d26d81
  happyReduction_40 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [Parser.PFType]
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         Parser.PFType
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_97
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    [Parser.PFType]>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 Parser.PFType
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
532511f8c95d492013fa5bb478ac1120
  happyReduction_41 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t17} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t17
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t17 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t17
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t17, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
64897e63c6eb01abb60ad9d6462e4845
  happyReduction_42 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         Parser.PFType
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 Parser.PFType
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
0dd3c139d689482eec8c2b90d55a557d
  happyReduction_43 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         Parser.PFType
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 Parser.PFType
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
54639523cc85b8a097b601019972d0b0
  happyReduction_44 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         Parser.PFType
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 Parser.PFType
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
8df4b23c557af7389eca47325d7bed81
  happyReduction_45 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t18} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53}.
    t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t18
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t39
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_83
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t18 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N).
                 <t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t18
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R <t>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t18, t39>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
a09a011282c1bcacd9f6590179089960
  happyReduction_46 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      Parser.PFType
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         Parser.PDecl
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_100
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    Parser.PFType
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PDecl (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                t40
                                                                t39
                                                                t38
                                                                Parser.PDecl
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
5b4d52544af48ab2ebd825fa4e3d9e86
  happyReduction_47 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t20} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      Parser.PFType
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
    -> t
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t20
         Parser.PFType
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         Parser.PFType
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_101
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t20 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    Parser.PFType
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    t52>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t20
                         Parser.PFType
                         t35
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t4
                                                                 t5
                                                                 t6
                                                                 t7
                                                                 t8
                                                                 t9
                                                                 t10
                                                                 t11
                                                                 t12
                                                                 t13
                                                                 t14
                                                                 t15
                                                                 t16
                                                                 t17
                                                                 t18
                                                                 t19
                                                                 Parser.PFType
                                                                 t21
                                                                 t22
                                                                 t23
                                                                 t24
                                                                 t25
                                                                 t26
                                                                 t27
                                                                 t28)) -}
ce10f14e30b8161a397bb4c9c704d10f
  happyReduction_48 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t20} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t20
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t20 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t20
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t20, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
08e137539809951e863e1dab0bc709fb
  happyReduction_49 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [Parser.PFType]
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         Parser.PFType
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_97
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    [Parser.PFType]>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 Parser.PFType
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
9510dd8e6c8b68953d44bf532451d80c
  happyReduction_5 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t} {t4}.
    Parser.HappyAbsSyn
      t4
      [t]
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t
                   @ t4 ->
                 GHC.Types.[] @ t)
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t :: <*>_N) (t4 :: <*>_N).
                 UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                  t4
                                                  [t]
                                                  t6
                                                  t7
                                                  t8
                                                  t9
                                                  t10
                                                  t11
                                                  t12
                                                  t13
                                                  t14
                                                  t15
                                                  t16
                                                  t17
                                                  t18
                                                  t19
                                                  t20
                                                  t21
                                                  t22
                                                  t23
                                                  t24
                                                  t25
                                                  t26
                                                  t27
                                                  t28)) -}
d4f77e697e62c60785c3c70d3d66dd15
  happyReduction_50 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [Parser.PFType]
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         Parser.PFType
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_97
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    [Parser.PFType]>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 Parser.PFType
                                                                 t35
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
67af8b7f101dd343cb492f30fb07772c
  happyReduction_51 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t21} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t21
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t21 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t21
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t35, t21>
                         <t21, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
6f68c2c3d1db039d6f31306c50722ce1
  happyReduction_52 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         Parser.PFType
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 Parser.PFType
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
2a3c1ddbb27f3128c3c33af7d926a2dd
  happyReduction_53 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         Parser.PFType
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 Parser.PFType
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
437663698495eea3714e1c2d2690ec7b
  happyReduction_54 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         Parser.PFType
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_99
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational Parser.PFType (Parser.HappyAbsSyn
                                                                 t52
                                                                 t51
                                                                 t50
                                                                 t49
                                                                 t48
                                                                 t47
                                                                 t46
                                                                 t45
                                                                 t44
                                                                 t43
                                                                 t42
                                                                 t41
                                                                 t40
                                                                 t39
                                                                 t38
                                                                 t37
                                                                 t36
                                                                 t35
                                                                 Parser.PFType
                                                                 t34
                                                                 t33
                                                                 t32
                                                                 t3
                                                                 t2
                                                                 t1)) -}
91e28a1537c846d68d08742894afb9ba
  happyReduction_55 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t22} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53}.
    t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t22
         t34
         t33
         t32
         t3
         t2
         t1
    -> t
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t36
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_83
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t22 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N).
                 <t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t22
                         t34
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R <t>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t35, t21>
                         <t22, t36>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
8c2824d7d85df15393640f231b60c2f2
  happyReduction_56 ::
    forall {t28} {t27} {t26} {t25} {t24} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t23} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t23
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         [Lexer.LToken]
         t33
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         [Lexer.LToken]
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_102
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t23 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t23
                    t57
                    t56
                    t55
                    t54
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         [Lexer.LToken]
                         t33
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [Lexer.LToken] (Parser.HappyAbsSyn
                                                                  t4
                                                                  t5
                                                                  t6
                                                                  t7
                                                                  t8
                                                                  t9
                                                                  t10
                                                                  t11
                                                                  t12
                                                                  t13
                                                                  t14
                                                                  t15
                                                                  t16
                                                                  t17
                                                                  t18
                                                                  t19
                                                                  t20
                                                                  t21
                                                                  t22
                                                                  [Lexer.LToken]
                                                                  t24
                                                                  t25
                                                                  t26
                                                                  t27
                                                                  t28)) -}
8e13039f54a21b90a0ee9138d16d6bc4
  happyReduction_57 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         [Lexer.LToken]
         t33
         t32
         t3
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_103
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t4
                    t5
                    t6
                    t7
                    t8
                    t9
                    t10
                    t11
                    t12
                    t13
                    t14
                    t15
                    t16
                    t17
                    t18
                    t19
                    t20
                    t21
                    t22
                    t23
                    t24
                    t25
                    t26
                    t27
                    t28>_R
                 ->_R UnsafeCo representational [Lexer.LToken] (Parser.HappyAbsSyn
                                                                  t52
                                                                  t51
                                                                  t50
                                                                  t49
                                                                  t48
                                                                  t47
                                                                  t46
                                                                  t45
                                                                  t44
                                                                  t43
                                                                  t42
                                                                  t41
                                                                  t40
                                                                  t39
                                                                  t38
                                                                  t37
                                                                  t36
                                                                  t35
                                                                  t34
                                                                  [Lexer.LToken]
                                                                  t33
                                                                  t32
                                                                  t3
                                                                  t2
                                                                  t1)) -}
59fedea4712c7cb144c7f70f9503d982
  happyReduction_58 ::
    forall {t28} {t27} {t26} {t25} {t24} {t} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      [t]
      t24
      t25
      t26
      t27
      t28
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4 ->
                 GHC.Types.[] @ t)
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N).
                 UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                  t4
                                                  t5
                                                  t6
                                                  t7
                                                  t8
                                                  t9
                                                  t10
                                                  t11
                                                  t12
                                                  t13
                                                  t14
                                                  t15
                                                  t16
                                                  t17
                                                  t18
                                                  t19
                                                  t20
                                                  t21
                                                  t22
                                                  [t]
                                                  t24
                                                  t25
                                                  t26
                                                  t27
                                                  t28)) -}
4ad9d2d74df6b63a0f0bfabfdeb7f2ec
  happyReduction_59 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {a} {t24} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t24
      a
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         [a]
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         [a]
         t25
         t26
         t27
         t28
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_104
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (a :: <*>_N) (t24 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t24
                    a
                    t55
                    t54
                    t53>_R
                 ->_R <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         [a]
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       [a]
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
4e47bebb0699960163617b5ed9c4ff4d
  happyReduction_6 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t6} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t6
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t6 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t6
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t6, t7>
                         <t49, t8>
                         <t48, t9>
                         <t47, t10>
                         <t46, t11>
                         <t45, t12>
                         <t44, t13>
                         <t43, t14>
                         <t42, t15>
                         <t41, t16>
                         <t40, t17>
                         <t39, t18>
                         <t38, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
a917a7c0f65576789e864eed2f274d4d
  happyReduction_60 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t24} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t}.
    t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t24
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_90
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t24 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t :: <*>_N).
                 <t>_R
                 ->_R <Parser.HappyAbsSyn
                         t52
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         t33
                         t24
                         t32
                         t3
                         t2
                         t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t35, t21>
                         <t34, t22>
                         <t33, t23>
                         <t24>_P
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
380e3ff71bcdeae9827ec6be1f2018d8
  happyReduction_61 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t} {t24} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t24
      t
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         [t]
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_105
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t :: <*>_N) (t24 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t24
                    t
                    t3
                    t2
                    t1>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       [t]
                                                       t25
                                                       t26
                                                       t27
                                                       t28)) -}
d4db68cfc52fb0cc3b7b38e47c45c321
  happyReduction_62 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      [Parser.PFType]
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         Parser.PConstr
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_106
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t76
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    [Parser.PFType]
                    t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PConstr (Parser.HappyAbsSyn
                                                                  t52
                                                                  t51
                                                                  t50
                                                                  t49
                                                                  t48
                                                                  t47
                                                                  t46
                                                                  t45
                                                                  t44
                                                                  t43
                                                                  t42
                                                                  t41
                                                                  t40
                                                                  t39
                                                                  t38
                                                                  t37
                                                                  t36
                                                                  t35
                                                                  t34
                                                                  t33
                                                                  t32
                                                                  Parser.PConstr
                                                                  t3
                                                                  t2
                                                                  t1)) -}
d3ad064469f8ad4cd5a8c800ebe8291c
  happyReduction_63 ::
    forall {t28} {t27} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4}.
    Parser.HappyStk
      (Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         [Parser.PConstr]
         t25
         Parser.PDecl
         t27
         t28)
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            t4
            t5
            t6
            t7
            t8
            t9
            t10
            t11
            t12
            t13
            t14
            t15
            t16
            t17
            t18
            t19
            t20
            t21
            t22
            t23
            [Parser.PConstr]
            t25
            Parser.PDecl
            t27
            t28)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(LS(LS))),1*U(1*U,1*U(A,1*U(U,1*U(A,U))))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t25
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   (w :: Parser.HappyStk
                           (Parser.HappyAbsSyn
                              t4
                              t5
                              t6
                              t7
                              t8
                              t9
                              t10
                              t11
                              t12
                              t13
                              t14
                              t15
                              t16
                              t17
                              t18
                              t19
                              t20
                              t21
                              t22
                              t23
                              [Parser.PConstr]
                              t25
                              Parser.PDecl
                              t27
                              t28)) ->
                 case w of ww { Parser.HappyStk ww1 ww2 ->
                 case ww2 of ww3 { Parser.HappyStk ww4 ww5 ->
                 case ww5 of ww6 { Parser.HappyStk ww7 ww8 ->
                 case ww8 of ww9 { Parser.HappyStk ww10 ww11 ->
                 Parser.HappyStk
                   @ (Parser.HappyAbsSyn
                        t4
                        t5
                        t6
                        t7
                        t8
                        t9
                        t10
                        t11
                        t12
                        t13
                        t14
                        t15
                        t16
                        t17
                        t18
                        t19
                        t20
                        t21
                        t22
                        t23
                        [Parser.PConstr]
                        t25
                        Parser.PDecl
                        t27
                        t28)
                   (Parser.PDataType
                      ww7
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t4
                                                    t5
                                                    t6
                                                    t7
                                                    t8
                                                    t9
                                                    t10
                                                    t11
                                                    t12
                                                    t13
                                                    t14
                                                    t15
                                                    t16
                                                    t17
                                                    t18
                                                    t19
                                                    t20
                                                    t21
                                                    t22
                                                    t23
                                                    [Parser.PConstr]
                                                    t25
                                                    Parser.PDecl
                                                    t27
                                                    t28) Lexer.LToken)
                      (GHC.List.reverse1
                         @ Parser.PConstr
                         ww1
                           `cast`
                         (UnsafeCo representational (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       [Parser.PConstr]
                                                       t25
                                                       Parser.PDecl
                                                       t27
                                                       t28) [Parser.PConstr])
                         (GHC.Types.[] @ Parser.PConstr)))
                     `cast`
                   (UnsafeCo representational Parser.PDecl (Parser.HappyAbsSyn
                                                              t4
                                                              t5
                                                              t6
                                                              t7
                                                              t8
                                                              t9
                                                              t10
                                                              t11
                                                              t12
                                                              t13
                                                              t14
                                                              t15
                                                              t16
                                                              t17
                                                              t18
                                                              t19
                                                              t20
                                                              t21
                                                              t22
                                                              t23
                                                              [Parser.PConstr]
                                                              t25
                                                              Parser.PDecl
                                                              t27
                                                              t28))
                   ww11 } } } }) -}
c1202e7ae1503e231969c84570a3c81e
  happyReduction_64 ::
    forall {t28} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t27} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {a} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [a]
      t52
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         a
         t33
         t32
         t3
         t2
         t27
         t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         [a]
         t28
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_107
                  `cast`
                (forall (t28 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t27 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (a :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    [a]
                    t52>_R
                 ->_R <Parser.HappyAbsSyn
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         a
                         t33
                         t32
                         t3
                         t2
                         t27
                         t1>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       [a]
                                                       t28)) -}
501b7babf96904915f9584e397200923
  happyReduction_65 ::
    forall {t28} {t} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      [t]
      t28
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (\ @ t28
                   @ t
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4 ->
                 GHC.Types.[] @ t)
                  `cast`
                (forall (t28 :: <*>_N) (t :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N).
                 UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                  t4
                                                  t5
                                                  t6
                                                  t7
                                                  t8
                                                  t9
                                                  t10
                                                  t11
                                                  t12
                                                  t13
                                                  t14
                                                  t15
                                                  t16
                                                  t17
                                                  t18
                                                  t19
                                                  t20
                                                  t21
                                                  t22
                                                  t23
                                                  t24
                                                  t25
                                                  t26
                                                  [t]
                                                  t28)) -}
f9f07a9a6c49bf0d3e736a88c2378905
  happyReduction_66 ::
    forall {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t28} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {a} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
      [a]
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         a
         t33
         t32
         t3
         t2
         t1
         t28
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_108
                  `cast`
                (forall (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t28 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (a :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t75
                    t74
                    t73
                    t72
                    t71
                    t70
                    t69
                    t68
                    t67
                    t66
                    t65
                    t64
                    t63
                    t62
                    t61
                    t60
                    t59
                    t58
                    t57
                    t56
                    t55
                    t54
                    t53
                    t52
                    [a]>_R
                 ->_R <Parser.HappyAbsSyn
                         t51
                         t50
                         t49
                         t48
                         t47
                         t46
                         t45
                         t44
                         t43
                         t42
                         t41
                         t40
                         t39
                         t38
                         t37
                         t36
                         t35
                         t34
                         a
                         t33
                         t32
                         t3
                         t2
                         t1
                         t28>_R
                 ->_R UnsafeCo representational [a] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       [a])) -}
af3a005e844961f3954c34239d69444c
  happyReduction_67 ::
    forall {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t28} {t1} {t2} {t3} {t32} {t33} {t} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t
      t33
      t32
      t3
      t2
      t1
      t28
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_109
                  `cast`
                (forall (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t28 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t
                    t33
                    t32
                    t3
                    t2
                    t1
                    t28>_R
                 ->_R UnsafeCo representational [t] (Parser.HappyAbsSyn
                                                       t4
                                                       t5
                                                       t6
                                                       t7
                                                       t8
                                                       t9
                                                       t10
                                                       t11
                                                       t12
                                                       t13
                                                       t14
                                                       t15
                                                       t16
                                                       t17
                                                       t18
                                                       t19
                                                       t20
                                                       t21
                                                       t22
                                                       t23
                                                       t24
                                                       t25
                                                       t26
                                                       t27
                                                       [t])) -}
3822c1d1c87c879879e034784b844162
  happyReduction_7 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t5} {t4} {t1} {t2} {t6} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t6
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t6 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t6
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t37, t19>
                         <t36, t20>
                         <t35, t21>
                         <t34, t22>
                         <t33, t23>
                         <t32, t24>
                         <t3, t25>
                         <t6, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
5daa2e43d54019367863332534e7d863
  happyReduction_79 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t1} {t2} {t3} {t4} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      [Parser.PDecl]
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t4
      t3
      t2
      t1
    -> Parser.P2Result
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t1
                   @ t2
                   @ t3
                   @ t4
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   [Parser.PDecl]
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t4
                                   t3
                                   t2
                                   t1) ->
                 Parser.P2Result
                   (GHC.List.reverse1
                      @ Parser.PDecl
                      happy_x_1
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t52
                                                    [Parser.PDecl]
                                                    t51
                                                    t50
                                                    t49
                                                    t48
                                                    t47
                                                    t46
                                                    t45
                                                    t44
                                                    t43
                                                    t42
                                                    t41
                                                    t40
                                                    t39
                                                    t38
                                                    t37
                                                    t36
                                                    t35
                                                    t34
                                                    t33
                                                    t4
                                                    t3
                                                    t2
                                                    t1) [Parser.PDecl])
                      (GHC.Types.[] @ Parser.PDecl))) -}
5836c7c52181b758bddf9cefd5676103
  happyReduction_8 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t6} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t6
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_86
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t6 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t52
                    t51
                    t50
                    t49
                    t48
                    t47
                    t46
                    t45
                    t44
                    t43
                    t42
                    t41
                    t40
                    t39
                    t38
                    t6
                    t37
                    t36
                    t35
                    t34
                    t33
                    t32
                    t3
                    t2
                    t1>_R
                 ->_R (Parser.HappyAbsSyn
                         <t52, t4>
                         <t51, t5>
                         <t50, t6>
                         <t49, t7>
                         <t48, t8>
                         <t47, t9>
                         <t46, t10>
                         <t45, t11>
                         <t44, t12>
                         <t43, t13>
                         <t42, t14>
                         <t41, t15>
                         <t40, t16>
                         <t39, t17>
                         <t38, t18>
                         <t6, t19>
                         <t37, t20>
                         <t36, t21>
                         <t35, t22>
                         <t34, t23>
                         <t33, t24>
                         <t32, t25>
                         <t3, t26>
                         <t2, t27>
                         <t1, t28>)_R) -}
0ebc5cc87622f7b0a786fbe8993c1b9c
  happyReduction_80 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {a} {t8} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t8
      a
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         [a]
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ a
                   @ t8
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t8
                                   a
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   [a]
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t8
                                                 a
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53) a)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t52
                                                 t51
                                                 t50
                                                 t49
                                                 [a]
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) [a])) -}
2b31cb99f303809785a36c7ea246b646
  happyReduction_81 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t} {t8} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t8
      t
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t
                   @ t8
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t8
                                   t
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t8
                                                 t
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) t)
                   (GHC.Types.[] @ t)) -}
f9feb08a9f5b63e017461a0e9c5b0d2b
  happyReduction_82 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.Pat
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (1, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.Pat
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)) -}
00b012b06a619014e9f1c2f5ce4e6f28
  happyReduction_83 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t22} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53}.
    t53
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t22
         t34
         t33
         t32
         t3
         t2
         t1
    -> t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t22
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,1*U><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t22
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   (happy_x_3 :: t53)
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t22
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1)
                   (happy_x_1 :: t) ->
                 happy_x_2) -}
5fc64a98629ca1377fe180aba4efcb64
  happyReduction_84 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      [Parser.Pat]
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.Pat
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   [Parser.Pat]
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.ConsPat
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   (GHC.List.reverse1
                      @ Parser.Pat
                      happy_x_2
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t76
                                                    t75
                                                    t74
                                                    t73
                                                    [Parser.Pat]
                                                    t72
                                                    t71
                                                    t70
                                                    t69
                                                    t68
                                                    t67
                                                    t66
                                                    t65
                                                    t64
                                                    t63
                                                    t62
                                                    t61
                                                    t60
                                                    t59
                                                    t58
                                                    t57
                                                    t56
                                                    t55
                                                    t54
                                                    t53) [Parser.Pat])
                      (GHC.Types.[] @ Parser.Pat))) -}
601a165edec27106c9f1c4b97e5c57dd
  happyReduction_85 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t4} {t1} {t2} {t3} {t5} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {a} {t76} {t77}.
    Parser.HappyAbsSyn
      t77
      t76
      a
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
    -> t
    -> Parser.HappyAbsSyn
         t53
         [a]
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t5
         t3
         t2
         t1
    -> [a]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t5
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ a
                   @ t76
                   @ t77
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t77
                                   t76
                                   a
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54)
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t53
                                   [a]
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t5
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t77
                                                 t76
                                                 a
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54) a)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t53
                                                 [a]
                                                 t52
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t5
                                                 t3
                                                 t2
                                                 t1) [a])) -}
9b154c8ad36e0fe22213bec02b9dbd72
  happyReduction_86 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t5} {t4} {t1} {t2} {t6} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t52
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t6
      t2
      t1
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t6
         t2
         t1
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t6
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t6
                                   t2
                                   t1) ->
                 happy_x_1) -}
6e77175a069729a74bd02c5db08bae89
  happyReduction_87 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t11} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t11
      t44
      t43
      t42
      Parser.PExpr
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> t -> Parser.PGuards
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,A>m1,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t11
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t11
                                   t44
                                   t43
                                   t42
                                   Parser.PExpr
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1)
                   (happy_x_1 :: t) ->
                 Parser.PNoGuards
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t11
                                                 t44
                                                 t43
                                                 t42
                                                 Parser.PExpr
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) Parser.PExpr)) -}
20fa6d4e83f5201e87fda229381304af
  happyReduction_88 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t11} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t11
      [(Parser.PExpr, Parser.PExpr)]
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> t -> Parser.PGuards
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,A>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t11
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t11
                                   [(Parser.PExpr, Parser.PExpr)]
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1)
                   (happy_x_1 :: t) ->
                 Parser.PGuards
                   (GHC.List.reverse1
                      @ (Parser.PExpr, Parser.PExpr)
                      happy_x_2
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t51
                                                    t50
                                                    t49
                                                    t48
                                                    t47
                                                    t46
                                                    t45
                                                    t11
                                                    [(Parser.PExpr, Parser.PExpr)]
                                                    t44
                                                    t43
                                                    t42
                                                    t41
                                                    t40
                                                    t39
                                                    t38
                                                    t37
                                                    t36
                                                    t35
                                                    t34
                                                    t33
                                                    t32
                                                    t3
                                                    t2
                                                    t1) [(Parser.PExpr, Parser.PExpr)])
                      (GHC.Types.[] @ (Parser.PExpr, Parser.PExpr)))) -}
59686e50dbe17a9536da38957df7e0dc
  happyReduction_89 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {a} {t12} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75}.
    Parser.HappyAbsSyn
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t12
      a
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         [a]
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> [a]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ a
                   @ t12
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t12
                                   a
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   [a]
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_3
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t75
                                                 t74
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t12
                                                 a
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53) a)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t52
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 [a]
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) [a])) -}
8b2bc4a12aa21849534fb9df530cc090
  happyReduction_9 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76} {t77} {t78} {t79} {t80} {t81} {t82} {t83} {t84} {t85} {t86} {t87} {t88} {t89} {t90} {t91} {t92} {t93} {t94} {t95} {t96} {t97} {t98} {t99} {t100}.
    Parser.HappyAbsSyn
      t100
      t99
      t98
      t97
      t96
      t95
      t94
      Parser.PGuards
      t93
      t92
      t91
      t90
      t89
      t88
      t87
      t86
      t85
      t84
      t83
      t82
      t81
      t80
      t79
      t78
      t77
    -> Parser.HappyAbsSyn
         t76
         t75
         t74
         t73
         [Parser.Pat]
         t72
         t71
         t70
         t69
         t68
         t67
         t66
         t65
         t64
         t63
         t62
         t61
         t60
         t59
         t58
         t57
         t56
         t55
         t54
         t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         Parser.PDecl
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U><L,U>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReduction_110
                  `cast`
                (forall (t28 :: <*>_N) (t27 :: <*>_N) (t26 :: <*>_N) (t25 :: <*>_N) (t24 :: <*>_N) (t23 :: <*>_N) (t22 :: <*>_N) (t21 :: <*>_N) (t20 :: <*>_N) (t19 :: <*>_N) (t18 :: <*>_N) (t17 :: <*>_N) (t16 :: <*>_N) (t15 :: <*>_N) (t14 :: <*>_N) (t13 :: <*>_N) (t12 :: <*>_N) (t11 :: <*>_N) (t10 :: <*>_N) (t9 :: <*>_N) (t8 :: <*>_N) (t7 :: <*>_N) (t6 :: <*>_N) (t5 :: <*>_N) (t4 :: <*>_N) (t1 :: <*>_N) (t2 :: <*>_N) (t3 :: <*>_N) (t32 :: <*>_N) (t33 :: <*>_N) (t34 :: <*>_N) (t35 :: <*>_N) (t36 :: <*>_N) (t37 :: <*>_N) (t38 :: <*>_N) (t39 :: <*>_N) (t40 :: <*>_N) (t41 :: <*>_N) (t42 :: <*>_N) (t43 :: <*>_N) (t44 :: <*>_N) (t45 :: <*>_N) (t46 :: <*>_N) (t47 :: <*>_N) (t48 :: <*>_N) (t49 :: <*>_N) (t50 :: <*>_N) (t51 :: <*>_N) (t52 :: <*>_N) (t53 :: <*>_N) (t54 :: <*>_N) (t55 :: <*>_N) (t56 :: <*>_N) (t57 :: <*>_N) (t58 :: <*>_N) (t59 :: <*>_N) (t60 :: <*>_N) (t61 :: <*>_N) (t62 :: <*>_N) (t63 :: <*>_N) (t64 :: <*>_N) (t65 :: <*>_N) (t66 :: <*>_N) (t67 :: <*>_N) (t68 :: <*>_N) (t69 :: <*>_N) (t70 :: <*>_N) (t71 :: <*>_N) (t72 :: <*>_N) (t73 :: <*>_N) (t74 :: <*>_N) (t75 :: <*>_N) (t76 :: <*>_N) (t77 :: <*>_N) (t78 :: <*>_N) (t79 :: <*>_N) (t80 :: <*>_N) (t81 :: <*>_N) (t82 :: <*>_N) (t83 :: <*>_N) (t84 :: <*>_N) (t85 :: <*>_N) (t86 :: <*>_N) (t87 :: <*>_N) (t88 :: <*>_N) (t89 :: <*>_N) (t90 :: <*>_N) (t91 :: <*>_N) (t92 :: <*>_N) (t93 :: <*>_N) (t94 :: <*>_N) (t95 :: <*>_N) (t96 :: <*>_N) (t97 :: <*>_N) (t98 :: <*>_N) (t99 :: <*>_N) (t100 :: <*>_N).
                 <Parser.HappyAbsSyn
                    t100
                    t99
                    t98
                    t97
                    t96
                    t95
                    t94
                    Parser.PGuards
                    t93
                    t92
                    t91
                    t90
                    t89
                    t88
                    t87
                    t86
                    t85
                    t84
                    t83
                    t82
                    t81
                    t80
                    t79
                    t78
                    t77>_R
                 ->_R <Parser.HappyAbsSyn
                         t76
                         t75
                         t74
                         t73
                         [Parser.Pat]
                         t72
                         t71
                         t70
                         t69
                         t68
                         t67
                         t66
                         t65
                         t64
                         t63
                         t62
                         t61
                         t60
                         t59
                         t58
                         t57
                         t56
                         t55
                         t54
                         t53>_R
                 ->_R <Parser.HappyAbsSyn
                         t4
                         t5
                         t6
                         t7
                         t8
                         t9
                         t10
                         t11
                         t12
                         t13
                         t14
                         t15
                         t16
                         t17
                         t18
                         t19
                         t20
                         t21
                         t22
                         t23
                         t24
                         t25
                         t26
                         t27
                         t28>_R
                 ->_R UnsafeCo representational Parser.PDecl (Parser.HappyAbsSyn
                                                                t52
                                                                t51
                                                                t50
                                                                Parser.PDecl
                                                                t49
                                                                t48
                                                                t47
                                                                t46
                                                                t45
                                                                t44
                                                                t43
                                                                t42
                                                                t41
                                                                t40
                                                                t39
                                                                t38
                                                                t37
                                                                t36
                                                                t35
                                                                t34
                                                                t33
                                                                t32
                                                                t3
                                                                t2
                                                                t1)) -}
92c65d0680704efdc7d3576bced5fd22
  happyReduction_90 ::
    forall {t28} {t27} {t26} {t25} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t24} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t}.
    t
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t24
         t32
         t3
         t2
         t1
    -> Parser.HappyAbsSyn
         t52
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t24
         t32
         t3
         t2
         t1
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t24
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t
                   (happy_x_2 :: t)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t52
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t24
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 happy_x_1) -}
bf232a96d13c55c4caed19d02097087a
  happyReduction_91 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t} {t12} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51}.
    Parser.HappyAbsSyn
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t12
      t
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t33
      t32
      t3
      t2
      t1
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t
                   @ t12
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t12
                                   t
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t12
                                                 t
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t3
                                                 t2
                                                 t1) t)
                   (GHC.Types.[] @ t)) -}
a61c1eaee025b998f7eeb0c0b8a1afea
  happyReduction_92 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t} {t42} {t13} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76} {t77}.
    Parser.HappyAbsSyn
      t77
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> t52
    -> Parser.HappyAbsSyn
         t51
         t50
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t13
         t42
         t
         t41
         t40
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t3
         t2
         t1
    -> (t, t66)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t
                   @ t42
                   @ t13
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   @ t77
                   (happy_x_3 :: Parser.HappyAbsSyn
                                   t77
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_2 :: t52)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t13
                                   t42
                                   t
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t3
                                   t2
                                   t1) ->
                 (happy_x_1
                    `cast`
                  (UnsafeCo representational (Parser.HappyAbsSyn
                                                t51
                                                t50
                                                t49
                                                t48
                                                t47
                                                t46
                                                t45
                                                t44
                                                t43
                                                t13
                                                t42
                                                t
                                                t41
                                                t40
                                                t39
                                                t38
                                                t37
                                                t36
                                                t35
                                                t34
                                                t33
                                                t32
                                                t3
                                                t2
                                                t1) t),
                  happy_x_3
                    `cast`
                  (UnsafeCo representational (Parser.HappyAbsSyn
                                                t77
                                                t76
                                                t75
                                                t74
                                                t73
                                                t72
                                                t71
                                                t70
                                                t69
                                                t68
                                                t67
                                                t66
                                                t65
                                                t64
                                                t63
                                                t62
                                                t61
                                                t60
                                                t59
                                                t58
                                                t57
                                                t56
                                                t55
                                                t54
                                                t53) t66))) -}
f999ee882ef3aed01880b540913bcdc0
  happyReduction_93 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t14} {t30} {t31} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {a} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73}.
    Parser.HappyAbsSyn
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      a
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      t52
      t51
      t50
    -> Parser.HappyAbsSyn
         t49
         t48
         t47
         t46
         t45
         t44
         t43
         t42
         t41
         t40
         [a]
         t39
         t38
         t37
         t36
         t35
         t34
         t33
         t32
         t31
         t30
         t14
         t3
         t2
         t1
    -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t14
                   @ t30
                   @ t31
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ a
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   a
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53
                                   t52
                                   t51
                                   t50)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   [a]
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t31
                                   t30
                                   t14
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ a
                   happy_x_2
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t73
                                                 t72
                                                 t71
                                                 t70
                                                 t69
                                                 t68
                                                 t67
                                                 t66
                                                 t65
                                                 t64
                                                 t63
                                                 t62
                                                 a
                                                 t61
                                                 t60
                                                 t59
                                                 t58
                                                 t57
                                                 t56
                                                 t55
                                                 t54
                                                 t53
                                                 t52
                                                 t51
                                                 t50) a)
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 [a]
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t31
                                                 t30
                                                 t14
                                                 t3
                                                 t2
                                                 t1) [a])) -}
28158992b61f3131252321fa6ff02867
  happyReduction_94 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t14} {t30} {t31} {t32} {t33} {t34} {t35} {t36} {t37} {t} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49}.
    Parser.HappyAbsSyn
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t
      t37
      t36
      t35
      t34
      t33
      t32
      t31
      t30
      t14
      t3
      t2
      t1
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t14
                   @ t30
                   @ t31
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t
                                   t37
                                   t36
                                   t35
                                   t34
                                   t33
                                   t32
                                   t31
                                   t30
                                   t14
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t33
                                                 t32
                                                 t31
                                                 t30
                                                 t14
                                                 t3
                                                 t2
                                                 t1) t)
                   (GHC.Types.[] @ t)) -}
3d4ca19743d5cfa8a270eb3274964fb1
  happyReduction_95 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      [Parser.PExpr]
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.PExpr
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (2, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   [Parser.PExpr]
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53)
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PApp
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   (GHC.List.reverse1
                      @ Parser.PExpr
                      happy_x_2
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t76
                                                    t75
                                                    t74
                                                    t73
                                                    t72
                                                    t71
                                                    t70
                                                    t69
                                                    t68
                                                    t67
                                                    [Parser.PExpr]
                                                    t66
                                                    t65
                                                    t64
                                                    t63
                                                    t62
                                                    t61
                                                    t60
                                                    t59
                                                    t58
                                                    t57
                                                    t56
                                                    t55
                                                    t54
                                                    t53) [Parser.PExpr])
                      (GHC.Types.[] @ Parser.PExpr))) -}
39e44709733d0a86e475f58f5c8f0b1f
  happyReduction_96 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.PExpr
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PAExpr
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)) -}
df9b4a02b266db733c8c9812b71db010
  happyReduction_97 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52} {t53} {t54} {t55} {t56} {t57} {t58} {t59} {t60} {t61} {t62} {t63} {t64} {t65} {t66} {t67} {t68} {t69} {t70} {t71} {t72} {t73} {t74} {t75} {t76}.
    Parser.HappyAbsSyn
      t76
      t75
      t74
      t73
      t72
      t71
      t70
      t69
      t68
      t67
      t66
      t65
      t64
      t63
      t62
      t61
      t60
      t59
      t58
      t57
      t56
      t55
      t54
      t53
      [Parser.PFType]
    -> Parser.HappyAbsSyn
         t4
         t5
         t6
         t7
         t8
         t9
         t10
         t11
         t12
         t13
         t14
         t15
         t16
         t17
         t18
         t19
         t20
         t21
         t22
         t23
         t24
         t25
         t26
         t27
         t28
    -> Parser.PFType
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><L,U>m1,
     Unfolding: InlineRule (2, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   @ t53
                   @ t54
                   @ t55
                   @ t56
                   @ t57
                   @ t58
                   @ t59
                   @ t60
                   @ t61
                   @ t62
                   @ t63
                   @ t64
                   @ t65
                   @ t66
                   @ t67
                   @ t68
                   @ t69
                   @ t70
                   @ t71
                   @ t72
                   @ t73
                   @ t74
                   @ t75
                   @ t76
                   (happy_x_2 :: Parser.HappyAbsSyn
                                   t76
                                   t75
                                   t74
                                   t73
                                   t72
                                   t71
                                   t70
                                   t69
                                   t68
                                   t67
                                   t66
                                   t65
                                   t64
                                   t63
                                   t62
                                   t61
                                   t60
                                   t59
                                   t58
                                   t57
                                   t56
                                   t55
                                   t54
                                   t53
                                   [Parser.PFType])
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PTApp
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)
                   (GHC.List.reverse1
                      @ Parser.PFType
                      happy_x_2
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    t76
                                                    t75
                                                    t74
                                                    t73
                                                    t72
                                                    t71
                                                    t70
                                                    t69
                                                    t68
                                                    t67
                                                    t66
                                                    t65
                                                    t64
                                                    t63
                                                    t62
                                                    t61
                                                    t60
                                                    t59
                                                    t58
                                                    t57
                                                    t56
                                                    t55
                                                    t54
                                                    t53
                                                    [Parser.PFType]) [Parser.PFType])
                      (GHC.Types.[] @ Parser.PFType))) -}
73065b655881fab0ac95febb6b1ef608
  happyReduction_98 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t4} {t1} {t2} {t3} {t5} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t} {t52} {t53}.
    Parser.HappyAbsSyn
      t53
      t52
      t
      t51
      t50
      t49
      t48
      t47
      t46
      t45
      t44
      t43
      t42
      t41
      t40
      t39
      t38
      t37
      t36
      t35
      t34
      t5
      t3
      t2
      t1
    -> [t]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t5
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t
                   @ t52
                   @ t53
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t53
                                   t52
                                   t
                                   t51
                                   t50
                                   t49
                                   t48
                                   t47
                                   t46
                                   t45
                                   t44
                                   t43
                                   t42
                                   t41
                                   t40
                                   t39
                                   t38
                                   t37
                                   t36
                                   t35
                                   t34
                                   t5
                                   t3
                                   t2
                                   t1) ->
                 GHC.Types.:
                   @ t
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t53
                                                 t52
                                                 t
                                                 t51
                                                 t50
                                                 t49
                                                 t48
                                                 t47
                                                 t46
                                                 t45
                                                 t44
                                                 t43
                                                 t42
                                                 t41
                                                 t40
                                                 t39
                                                 t38
                                                 t37
                                                 t36
                                                 t35
                                                 t34
                                                 t5
                                                 t3
                                                 t2
                                                 t1) t)
                   (GHC.Types.[] @ t)) -}
9469ce734b7e0b32cedcb875b5ad109f
  happyReduction_99 ::
    forall {t28} {t27} {t26} {t25} {t24} {t23} {t22} {t21} {t20} {t19} {t18} {t17} {t16} {t15} {t14} {t13} {t12} {t11} {t10} {t9} {t8} {t7} {t6} {t5} {t4} {t1} {t2} {t3} {t32} {t33} {t34} {t35} {t36} {t37} {t38} {t39} {t40} {t41} {t42} {t43} {t44} {t45} {t46} {t47} {t48} {t49} {t50} {t51} {t52}.
    Parser.HappyAbsSyn
      t4
      t5
      t6
      t7
      t8
      t9
      t10
      t11
      t12
      t13
      t14
      t15
      t16
      t17
      t18
      t19
      t20
      t21
      t22
      t23
      t24
      t25
      t26
      t27
      t28
    -> Parser.PFType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (1, True, True)
                (\ @ t28
                   @ t27
                   @ t26
                   @ t25
                   @ t24
                   @ t23
                   @ t22
                   @ t21
                   @ t20
                   @ t19
                   @ t18
                   @ t17
                   @ t16
                   @ t15
                   @ t14
                   @ t13
                   @ t12
                   @ t11
                   @ t10
                   @ t9
                   @ t8
                   @ t7
                   @ t6
                   @ t5
                   @ t4
                   @ t1
                   @ t2
                   @ t3
                   @ t32
                   @ t33
                   @ t34
                   @ t35
                   @ t36
                   @ t37
                   @ t38
                   @ t39
                   @ t40
                   @ t41
                   @ t42
                   @ t43
                   @ t44
                   @ t45
                   @ t46
                   @ t47
                   @ t48
                   @ t49
                   @ t50
                   @ t51
                   @ t52
                   (happy_x_1 :: Parser.HappyAbsSyn
                                   t4
                                   t5
                                   t6
                                   t7
                                   t8
                                   t9
                                   t10
                                   t11
                                   t12
                                   t13
                                   t14
                                   t15
                                   t16
                                   t17
                                   t18
                                   t19
                                   t20
                                   t21
                                   t22
                                   t23
                                   t24
                                   t25
                                   t26
                                   t27
                                   t28) ->
                 Parser.PTAExpr
                   happy_x_1
                     `cast`
                   (UnsafeCo representational (Parser.HappyAbsSyn
                                                 t4
                                                 t5
                                                 t6
                                                 t7
                                                 t8
                                                 t9
                                                 t10
                                                 t11
                                                 t12
                                                 t13
                                                 t14
                                                 t15
                                                 t16
                                                 t17
                                                 t18
                                                 t19
                                                 t20
                                                 t21
                                                 t22
                                                 t23
                                                 t24
                                                 t25
                                                 t26
                                                 t27
                                                 t28) Lexer.LToken)) -}
541b8a61ec46e62e174ca411a3bd4258
  happyReturn :: forall a. a -> Parser.P a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReturn2
                  `cast`
                (forall (a :: <*>_N).
                 <a>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Parser.PState>_N <Data.Either.Either GHC.Base.String>_R <a>_N)) -}
d953edc072102172bc0131e00fd44f76
  happyReturn1 :: forall a b. a -> b -> Parser.P a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Parser.happyReturn3
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <b>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Parser.PState>_N <Data.Either.Either GHC.Base.String>_R <a>_N)) -}
2a4404418f2e9b76d7f7c9f32bc8b627
  happyReturn2 ::
    forall {a}.
    a
    -> Parser.PState
    -> Data.Either.Either [GHC.Types.Char] (a, Parser.PState)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (eta :: a) (eta1 :: Parser.PState) ->
                 Data.Either.Right
                   @ [GHC.Types.Char]
                   @ (a, Parser.PState)
                   (eta, eta1)) -}
07c4f7d2d24c8bae2c8cf052e26b94ca
  happyReturn3 ::
    forall {a} {b}.
    a
    -> b
    -> Parser.PState
    -> Data.Either.Either [GHC.Types.Char] (a, Parser.PState)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>m2,
     Unfolding: InlineRule (3, True, False)
                (\ @ a @ b (a1 :: a) (tks :: b) (eta1 :: Parser.PState) ->
                 Data.Either.Right
                   @ [GHC.Types.Char]
                   @ (a, Parser.PState)
                   (a1, eta1)) -}
b30bd78da736012f274cdc366b36711a
  happySeq :: forall {b} {a}. a -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ b @ a -> Parser.happyDontSeq @ a @ b) -}
44badce646898bacdb4287e90a61f8f9
  happyShift ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 6, Strictness: <S,U><S,1*U><L,U><L,U><L,U><L,U(U,U)>,
     Inline: NOINLINE -}
f2fbde8c22cbe4d2986464785589f7ac
  happySpecReduce_0 ::
    GHC.Prim.Int#
    -> Parser.HappyAbsSyn
         Parser.P2Result
         [Parser.PDecl]
         Parser.PDecl
         Parser.PDecl
         [Parser.Pat]
         Parser.Pat
         Parser.Pat
         Parser.PGuards
         [(Parser.PExpr, Parser.PExpr)]
         (Parser.PExpr, Parser.PExpr)
         [Parser.PExpr]
         Parser.PExpr
         Parser.PExpr
         Parser.PFType
         Parser.PFType
         Parser.PDecl
         Parser.PFType
         Parser.PFType
         Parser.PFType
         [Lexer.LToken]
         [Parser.PConstr]
         Parser.PConstr
         Parser.PDecl
         [Parser.PFType]
         [Parser.PFType]
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 7,
     Strictness: <L,U><L,U><S,1*U><L,U><S,U><L,U><L,U(U,U)>,
     Inline: NOINLINE -}
35cb31456b2815b34de89601220805b2
  happySpecReduce_1 ::
    GHC.Prim.Int#
    -> (Parser.HappyAbsSyn
          Parser.P2Result
          [Parser.PDecl]
          Parser.PDecl
          Parser.PDecl
          [Parser.Pat]
          Parser.Pat
          Parser.Pat
          Parser.PGuards
          [(Parser.PExpr, Parser.PExpr)]
          (Parser.PExpr, Parser.PExpr)
          [Parser.PExpr]
          Parser.PExpr
          Parser.PExpr
          Parser.PFType
          Parser.PFType
          Parser.PDecl
          Parser.PFType
          Parser.PFType
          Parser.PFType
          [Lexer.LToken]
          [Parser.PConstr]
          Parser.PConstr
          Parser.PDecl
          [Parser.PFType]
          [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 7,
     Strictness: <L,U><L,1*C1(U)><S,1*U><L,U><L,U><L,U(U,U)><L,U(U,U)>,
     Inline: NOINLINE -}
027d613b48f123f219cc0b01d26e1453
  happySpecReduce_2 ::
    GHC.Prim.Int#
    -> (Parser.HappyAbsSyn
          Parser.P2Result
          [Parser.PDecl]
          Parser.PDecl
          Parser.PDecl
          [Parser.Pat]
          Parser.Pat
          Parser.Pat
          Parser.PGuards
          [(Parser.PExpr, Parser.PExpr)]
          (Parser.PExpr, Parser.PExpr)
          [Parser.PExpr]
          Parser.PExpr
          Parser.PExpr
          Parser.PFType
          Parser.PFType
          Parser.PDecl
          Parser.PFType
          Parser.PFType
          Parser.PFType
          [Lexer.LToken]
          [Parser.PConstr]
          Parser.PConstr
          Parser.PDecl
          [Parser.PFType]
          [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 7,
     Strictness: <L,U><L,1*C1(C1(U))><S,1*U><L,U><L,U><L,U(U,U(U,U))><L,U(U,U(U,U))>,
     Inline: NOINLINE -}
1459006e743d37a606754a96d2520b18
  happySpecReduce_3 ::
    GHC.Prim.Int#
    -> (Parser.HappyAbsSyn
          Parser.P2Result
          [Parser.PDecl]
          Parser.PDecl
          Parser.PDecl
          [Parser.Pat]
          Parser.Pat
          Parser.Pat
          Parser.PGuards
          [(Parser.PExpr, Parser.PExpr)]
          (Parser.PExpr, Parser.PExpr)
          [Parser.PExpr]
          Parser.PExpr
          Parser.PExpr
          Parser.PFType
          Parser.PFType
          Parser.PDecl
          Parser.PFType
          Parser.PFType
          Parser.PFType
          [Lexer.LToken]
          [Parser.PConstr]
          Parser.PConstr
          Parser.PDecl
          [Parser.PFType]
          [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType]
        -> Parser.HappyAbsSyn
             Parser.P2Result
             [Parser.PDecl]
             Parser.PDecl
             Parser.PDecl
             [Parser.Pat]
             Parser.Pat
             Parser.Pat
             Parser.PGuards
             [(Parser.PExpr, Parser.PExpr)]
             (Parser.PExpr, Parser.PExpr)
             [Parser.PExpr]
             Parser.PExpr
             Parser.PExpr
             Parser.PFType
             Parser.PFType
             Parser.PDecl
             Parser.PFType
             Parser.PFType
             Parser.PFType
             [Lexer.LToken]
             [Parser.PConstr]
             Parser.PConstr
             Parser.PDecl
             [Parser.PFType]
             [Parser.PFType])
    -> GHC.Prim.Int#
    -> Lexer.L Lexer.Token
    -> GHC.Prim.Int#
    -> Parser.Happy_IntList
    -> Parser.HappyStk
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
    -> [Lexer.LToken]
    -> Parser.P
         (Parser.HappyAbsSyn
            Parser.P2Result
            [Parser.PDecl]
            Parser.PDecl
            Parser.PDecl
            [Parser.Pat]
            Parser.Pat
            Parser.Pat
            Parser.PGuards
            [(Parser.PExpr, Parser.PExpr)]
            (Parser.PExpr, Parser.PExpr)
            [Parser.PExpr]
            Parser.PExpr
            Parser.PExpr
            Parser.PFType
            Parser.PFType
            Parser.PDecl
            Parser.PFType
            Parser.PFType
            Parser.PFType
            [Lexer.LToken]
            [Parser.PConstr]
            Parser.PConstr
            Parser.PDecl
            [Parser.PFType]
            [Parser.PFType])
  {- Arity: 7,
     Strictness: <L,U><L,1*C1(C1(C1(U)))><S,1*U><L,U><L,U><L,U(U,U(U,U(U,U)))><L,U(U,U(U,U(U,U)))>,
     Inline: NOINLINE -}
fb82cfece8ae8b9b339d31b4929c7356
  happyTable :: Parser.HappyAddr
  {- HasNoCafRefs, Strictness: m, Inline: NOINLINE -}
15339f3475015db8c05941541bdcc914
  happyTcHack :: forall a. GHC.Prim.Int# -> a -> a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, True)
                (\ @ a (x :: GHC.Prim.Int#) (y :: a) -> y) -}
08ab610566589787e13cb8d44885903c
  happyThen ::
    forall a b. Parser.P a -> (a -> Parser.P b) -> Parser.P b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(C1(U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                (Parser.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ Parser.PState) -}
e3fbdb56f54bfbee8548e71258871bad
  happyThen1 ::
    forall {b} {t} {t1} {(m :: * -> *)}.
    GHC.Base.Monad m =>
    m t1 -> (t1 -> t -> m b) -> t -> m b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),1*U(A,1*C1(C1(U)),A,A,A)><L,U><L,C(C1(U))><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ b
                   @ t
                   @ t1
                   @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (m1 :: m t1)
                   (k :: t1 -> t -> m b)
                   (tks :: t) ->
                 GHC.Base.>>= @ m $dMonad @ t1 @ b m1 (\ (a :: t1) -> k a tks)) -}
b7325de5ae2e661bc9a19b0cd1264c13
  happy_n_nonterms :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 25#) -}
5e326a4be74d7c96649d07dd9a6a262c
  happy_n_terms :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
ce82a1c6735be1f468f5a5135286cda1
  indexShortOffAddr ::
    Parser.HappyAddr -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Parser.HappyAddr) (off :: GHC.Prim.Int#) ->
                 case ds of wild { Parser.HappyA# arr ->
                 let {
                   off' :: GHC.Prim.Int# = GHC.Prim.*# off 2#
                 } in
                 case GHC.Prim.indexCharOffAddr# arr off' of wild1 { DEFAULT ->
                 case GHC.Prim.indexCharOffAddr#
                        arr
                        (GHC.Prim.+# off' 1#) of wild2 { DEFAULT ->
                 GHC.Prim.narrow16Int#
                   (GHC.Prim.word2Int#
                      (GHC.Prim.or#
                         (GHC.Prim.uncheckedShiftL#
                            (GHC.Prim.int2Word# (GHC.Prim.ord# wild2))
                            8#)
                         (GHC.Prim.int2Word# (GHC.Prim.ord# wild1)))) } } }) -}
bc597f17fa347eaebfb1ade826f0363b
  left :: forall a. GHC.Base.String -> Parser.P a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,A>m1,
     Unfolding: InlineRule (0, True, True)
                Parser.left1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Parser.PState>_N <Data.Either.Either GHC.Base.String>_R <a>_N)) -}
eed911e5aa08c29e2634ff68296ee5f0
  left1 ::
    forall {a}.
    GHC.Base.String
    -> Parser.PState
    -> Data.Either.Either GHC.Base.String (a, Parser.PState)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,A>m1,
     Unfolding: InlineRule (2, True, True)
                (\ @ a (l :: GHC.Base.String) (s :: Parser.PState) ->
                 Data.Either.Left @ GHC.Base.String @ (a, Parser.PState) l) -}
f2628cee9ae24afb181f291b31491319
  notHappyAtAll :: forall a. a
  {- Strictness: x -}
fe4600f925e7824cc3bf068011173391
  parse :: [Lexer.LToken] -> Parser.P2Result
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: [Lexer.LToken]) ->
                 case (Parser.happyNewToken
                         0#
                         (Parser.notHappyAtAll @ Parser.Happy_IntList)
                         (Parser.notHappyAtAll
                            @ (Parser.HappyStk
                                 (Parser.HappyAbsSyn
                                    Parser.P2Result
                                    [Parser.PDecl]
                                    Parser.PDecl
                                    Parser.PDecl
                                    [Parser.Pat]
                                    Parser.Pat
                                    Parser.Pat
                                    Parser.PGuards
                                    [(Parser.PExpr, Parser.PExpr)]
                                    (Parser.PExpr, Parser.PExpr)
                                    [Parser.PExpr]
                                    Parser.PExpr
                                    Parser.PExpr
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PDecl
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PFType
                                    [Lexer.LToken]
                                    [Parser.PConstr]
                                    Parser.PConstr
                                    Parser.PDecl
                                    [Parser.PFType]
                                    [Parser.PFType])))
                         eta)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Parser.PState>_N
                           <Data.Either.Either GHC.Base.String>_R
                           <Parser.HappyAbsSyn
                              Parser.P2Result
                              [Parser.PDecl]
                              Parser.PDecl
                              Parser.PDecl
                              [Parser.Pat]
                              Parser.Pat
                              Parser.Pat
                              Parser.PGuards
                              [(Parser.PExpr, Parser.PExpr)]
                              (Parser.PExpr, Parser.PExpr)
                              [Parser.PExpr]
                              Parser.PExpr
                              Parser.PExpr
                              Parser.PFType
                              Parser.PFType
                              Parser.PDecl
                              Parser.PFType
                              Parser.PFType
                              Parser.PFType
                              [Lexer.LToken]
                              [Parser.PConstr]
                              Parser.PConstr
                              Parser.PDecl
                              [Parser.PFType]
                              [Parser.PFType]>_N)
                        Parser.NoState of wild {
                   Data.Either.Left l -> Lexer.catchEither1 @ Parser.P2Result l
                   Data.Either.Right r1
                   -> case r1 of wild1 { (,) a1 s' ->
                      a1
                        `cast`
                      (UnsafeCo representational (Parser.HappyAbsSyn
                                                    Parser.P2Result
                                                    [Parser.PDecl]
                                                    Parser.PDecl
                                                    Parser.PDecl
                                                    [Parser.Pat]
                                                    Parser.Pat
                                                    Parser.Pat
                                                    Parser.PGuards
                                                    [(Parser.PExpr, Parser.PExpr)]
                                                    (Parser.PExpr, Parser.PExpr)
                                                    [Parser.PExpr]
                                                    Parser.PExpr
                                                    Parser.PExpr
                                                    Parser.PFType
                                                    Parser.PFType
                                                    Parser.PDecl
                                                    Parser.PFType
                                                    Parser.PFType
                                                    Parser.PFType
                                                    [Lexer.LToken]
                                                    [Parser.PConstr]
                                                    Parser.PConstr
                                                    Parser.PDecl
                                                    [Parser.PFType]
                                                    [Parser.PFType]) Parser.P2Result) } }) -}
2a225cdba4ebdbe3732a287bf5ef0fa0
  parse' ::
    [Lexer.LToken]
    -> Data.Either.Either GHC.Base.String Parser.P2Result
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (inp :: [Lexer.LToken]) ->
                 case (Parser.happyNewToken
                         0#
                         (Parser.notHappyAtAll @ Parser.Happy_IntList)
                         (Parser.notHappyAtAll
                            @ (Parser.HappyStk
                                 (Parser.HappyAbsSyn
                                    Parser.P2Result
                                    [Parser.PDecl]
                                    Parser.PDecl
                                    Parser.PDecl
                                    [Parser.Pat]
                                    Parser.Pat
                                    Parser.Pat
                                    Parser.PGuards
                                    [(Parser.PExpr, Parser.PExpr)]
                                    (Parser.PExpr, Parser.PExpr)
                                    [Parser.PExpr]
                                    Parser.PExpr
                                    Parser.PExpr
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PDecl
                                    Parser.PFType
                                    Parser.PFType
                                    Parser.PFType
                                    [Lexer.LToken]
                                    [Parser.PConstr]
                                    Parser.PConstr
                                    Parser.PDecl
                                    [Parser.PFType]
                                    [Parser.PFType])))
                         inp)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Parser.PState>_N
                           <Data.Either.Either GHC.Base.String>_R
                           <Parser.HappyAbsSyn
                              Parser.P2Result
                              [Parser.PDecl]
                              Parser.PDecl
                              Parser.PDecl
                              [Parser.Pat]
                              Parser.Pat
                              Parser.Pat
                              Parser.PGuards
                              [(Parser.PExpr, Parser.PExpr)]
                              (Parser.PExpr, Parser.PExpr)
                              [Parser.PExpr]
                              Parser.PExpr
                              Parser.PExpr
                              Parser.PFType
                              Parser.PFType
                              Parser.PDecl
                              Parser.PFType
                              Parser.PFType
                              Parser.PFType
                              [Lexer.LToken]
                              [Parser.PConstr]
                              Parser.PConstr
                              Parser.PDecl
                              [Parser.PFType]
                              [Parser.PFType]>_N)
                        Parser.NoState of wild {
                   Data.Either.Left l
                   -> Data.Either.Left @ [GHC.Types.Char] @ Parser.P2Result l
                   Data.Either.Right r1
                   -> Data.Either.Right
                        @ [GHC.Types.Char]
                        @ Parser.P2Result
                        (case r1 of wild1 { (,) a1 s' ->
                         a1
                           `cast`
                         (UnsafeCo representational (Parser.HappyAbsSyn
                                                       Parser.P2Result
                                                       [Parser.PDecl]
                                                       Parser.PDecl
                                                       Parser.PDecl
                                                       [Parser.Pat]
                                                       Parser.Pat
                                                       Parser.Pat
                                                       Parser.PGuards
                                                       [(Parser.PExpr, Parser.PExpr)]
                                                       (Parser.PExpr, Parser.PExpr)
                                                       [Parser.PExpr]
                                                       Parser.PExpr
                                                       Parser.PExpr
                                                       Parser.PFType
                                                       Parser.PFType
                                                       Parser.PDecl
                                                       Parser.PFType
                                                       Parser.PFType
                                                       Parser.PFType
                                                       [Lexer.LToken]
                                                       [Parser.PConstr]
                                                       Parser.PConstr
                                                       Parser.PDecl
                                                       [Parser.PFType]
                                                       [Parser.PFType]) Parser.P2Result) }) }) -}
65091ff14278512d1bce26ca003efc16
  parseError :: forall a. [Lexer.LToken] -> Parser.P a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [Lexer.LToken]) ->
                 case ds of wild {
                   []
                   -> (Parser.parseError2 @ a)
                        `cast`
                      (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <Parser.PState>_N <Data.Either.Either GHC.Base.String>_R <a>_N))
                   : ds1 ltoks
                   -> case ds1 of wild1 { Lexer.L ds2 t ->
                      case ds2 of wild2 {
                        Lexer.SrcLoc _f dt dt1
                        -> let {
                             l :: GHC.Base.String
                             = GHC.CString.unpackAppendCString#
                                 "Parse error in {"#
                                 (case GHC.Show.$wshowSignedInt
                                         0#
                                         dt
                                         (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                  GHC.Base.++
                                    @ GHC.Types.Char
                                    (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                    (GHC.CString.unpackAppendCString#
                                       ","#
                                       (case GHC.Show.$wshowSignedInt
                                               0#
                                               dt1
                                               (GHC.Types.[]
                                                  @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                        GHC.Base.++
                                          @ GHC.Types.Char
                                          (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                          (GHC.CString.unpackAppendCString#
                                             "}: "#
                                             (Lexer.$fShowToken_$cshow t)) })) })
                           } in
                           let {
                             lvl223 :: Data.Either.Either GHC.Base.String (a, Parser.PState)
                             = Data.Either.Left @ GHC.Base.String @ (a, Parser.PState) l
                           } in
                           (\ (s :: Parser.PState) -> lvl223)
                             `cast`
                           (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                     <Parser.PState>_N
                                     <Data.Either.Either GHC.Base.String>_R
                                     <a>_N))
                        Lexer.NoLoc
                        -> let {
                             l :: GHC.Base.String
                             = GHC.CString.unpackAppendCString#
                                 "Parse error: "#
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    (Lexer.$fShowToken_$cshow t)
                                    Parser.parseError1)
                           } in
                           let {
                             lvl223 :: Data.Either.Either GHC.Base.String (a, Parser.PState)
                             = Data.Either.Left @ GHC.Base.String @ (a, Parser.PState) l
                           } in
                           (\ (s :: Parser.PState) -> lvl223)
                             `cast`
                           (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                     <Parser.PState>_N
                                     <Data.Either.Either GHC.Base.String>_R
                                     <a>_N)) } } }) -}
ddfa76af81792a60fc31403d74e4448c
  parseError1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " (is your indentation wrong?)"#) -}
324abfbdb7b779de160e69750d8076eb
  parseError2 ::
    forall {a}.
    Parser.PState
    -> Data.Either.Either GHC.Base.String (a, Parser.PState)
  {- Arity: 1, Strictness: <L,A>m1,
     Unfolding: InlineRule (1, True, True)
                (\ @ a (s :: Parser.PState) ->
                 Data.Either.Left
                   @ GHC.Base.String
                   @ (a, Parser.PState)
                   Parser.parseError_l) -}
4eb8164e9a8c5e6736824396e7e924ce
  parseError_l :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Parse error at end (is there a ')','}' or ']' missing?)."#) -}
ca83d1254003fca4f260b409008ff89a
  programParser :: [Lexer.LToken] -> Parser.P Parser.P2Result
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (tks :: [Lexer.LToken]) ->
                 let {
                   m1 :: Control.Monad.Trans.State.Lazy.StateT
                           Parser.PState
                           (Data.Either.Either GHC.Base.String)
                           (Parser.HappyAbsSyn
                              Parser.P2Result
                              [Parser.PDecl]
                              Parser.PDecl
                              Parser.PDecl
                              [Parser.Pat]
                              Parser.Pat
                              Parser.Pat
                              Parser.PGuards
                              [(Parser.PExpr, Parser.PExpr)]
                              (Parser.PExpr, Parser.PExpr)
                              [Parser.PExpr]
                              Parser.PExpr
                              Parser.PExpr
                              Parser.PFType
                              Parser.PFType
                              Parser.PDecl
                              Parser.PFType
                              Parser.PFType
                              Parser.PFType
                              [Lexer.LToken]
                              [Parser.PConstr]
                              Parser.PConstr
                              Parser.PDecl
                              [Parser.PFType]
                              [Parser.PFType])
                   = Parser.happyNewToken
                       0#
                       (Parser.notHappyAtAll @ Parser.Happy_IntList)
                       (Parser.notHappyAtAll
                          @ (Parser.HappyStk
                               (Parser.HappyAbsSyn
                                  Parser.P2Result
                                  [Parser.PDecl]
                                  Parser.PDecl
                                  Parser.PDecl
                                  [Parser.Pat]
                                  Parser.Pat
                                  Parser.Pat
                                  Parser.PGuards
                                  [(Parser.PExpr, Parser.PExpr)]
                                  (Parser.PExpr, Parser.PExpr)
                                  [Parser.PExpr]
                                  Parser.PExpr
                                  Parser.PExpr
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PDecl
                                  Parser.PFType
                                  Parser.PFType
                                  Parser.PFType
                                  [Lexer.LToken]
                                  [Parser.PConstr]
                                  Parser.PConstr
                                  Parser.PDecl
                                  [Parser.PFType]
                                  [Parser.PFType])))
                       tks
                 } in
                 (\ (s1 :: Parser.PState) ->
                  case m1
                         `cast`
                       (Control.Monad.Trans.State.Lazy.N:StateT[0]
                            <Parser.PState>_N
                            <Data.Either.Either GHC.Base.String>_R
                            <Parser.HappyAbsSyn
                               Parser.P2Result
                               [Parser.PDecl]
                               Parser.PDecl
                               Parser.PDecl
                               [Parser.Pat]
                               Parser.Pat
                               Parser.Pat
                               Parser.PGuards
                               [(Parser.PExpr, Parser.PExpr)]
                               (Parser.PExpr, Parser.PExpr)
                               [Parser.PExpr]
                               Parser.PExpr
                               Parser.PExpr
                               Parser.PFType
                               Parser.PFType
                               Parser.PDecl
                               Parser.PFType
                               Parser.PFType
                               Parser.PFType
                               [Lexer.LToken]
                               [Parser.PConstr]
                               Parser.PConstr
                               Parser.PDecl
                               [Parser.PFType]
                               [Parser.PFType]>_N)
                         s1 of wild {
                    Data.Either.Left l
                    -> Data.Either.Left
                         @ [GHC.Types.Char]
                         @ (Parser.P2Result, Parser.PState)
                         l
                    Data.Either.Right r1
                    -> Data.Either.Right
                         @ [GHC.Types.Char]
                         @ (Parser.P2Result, Parser.PState)
                         (case r1 of wild1 { (,) a1 s' ->
                          a1
                            `cast`
                          (UnsafeCo representational (Parser.HappyAbsSyn
                                                        Parser.P2Result
                                                        [Parser.PDecl]
                                                        Parser.PDecl
                                                        Parser.PDecl
                                                        [Parser.Pat]
                                                        Parser.Pat
                                                        Parser.Pat
                                                        Parser.PGuards
                                                        [(Parser.PExpr, Parser.PExpr)]
                                                        (Parser.PExpr, Parser.PExpr)
                                                        [Parser.PExpr]
                                                        Parser.PExpr
                                                        Parser.PExpr
                                                        Parser.PFType
                                                        Parser.PFType
                                                        Parser.PDecl
                                                        Parser.PFType
                                                        Parser.PFType
                                                        Parser.PFType
                                                        [Lexer.LToken]
                                                        [Parser.PConstr]
                                                        Parser.PConstr
                                                        Parser.PDecl
                                                        [Parser.PFType]
                                                        [Parser.PFType]) Parser.P2Result) },
                          case r1 of wild1 { (,) a1 s' -> s' }) })
                   `cast`
                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Parser.PState>_N
                           <Data.Either.Either GHC.Base.String>_R
                           <Parser.P2Result>_N))) -}
6a45298e153bd37a4e4cfd6b6131c356
  r :: forall a. [a] -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True) GHC.List.reverse -}
d49517fc1b8ed149bb3be167a487747f
  runP ::
    ([Lexer.LToken] -> Parser.P Parser.P2Result)
    -> [Lexer.LToken] -> Parser.P2Result
  {- Arity: 2, Strictness: <C(C(S)),1*C1(C1(U))><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (p :: [Lexer.LToken] -> Parser.P Parser.P2Result)
                   (eta :: [Lexer.LToken]) ->
                 case (p eta)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Parser.PState>_N
                           <Data.Either.Either GHC.Base.String>_R
                           <Parser.P2Result>_N)
                        Parser.NoState of wild {
                   Data.Either.Left l -> Lexer.catchEither1 @ Parser.P2Result l
                   Data.Either.Right r1 -> case r1 of wild1 { (,) a1 ds1 -> a1 } }) -}
068fed886a0dbbfa84659ee4cb39f77c
  runPWithoutError ::
    ([Lexer.LToken] -> Parser.P Parser.P2Result)
    -> [Lexer.LToken]
    -> Data.Either.Either GHC.Base.String Parser.P2Result
  {- Arity: 2, HasNoCafRefs, Strictness: <C(C(S)),1*C1(C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (p :: [Lexer.LToken] -> Parser.P Parser.P2Result)
                   (inp :: [Lexer.LToken]) ->
                 case (p inp)
                        `cast`
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Parser.PState>_N
                           <Data.Either.Either GHC.Base.String>_R
                           <Parser.P2Result>_N)
                        Parser.NoState of wild {
                   Data.Either.Left l
                   -> Data.Either.Left @ [GHC.Types.Char] @ Parser.P2Result l
                   Data.Either.Right r1
                   -> Data.Either.Right
                        @ [GHC.Types.Char]
                        @ Parser.P2Result
                        (case r1 of wild1 { (,) a1 ds1 -> a1 }) }) -}
instance GHC.Classes.Eq [Lexer.L] = Parser.$fEqL
instance GHC.Classes.Eq [Parser.PFType] = Parser.$fEqPFType
instance GHC.Classes.Ord [Lexer.L] = Parser.$fOrdL
instance GHC.Show.Show [Parser.P2Result] = Parser.$fShowP2Result
instance GHC.Show.Show [Parser.PConstr] = Parser.$fShowPConstr
instance GHC.Show.Show [Parser.PDecl] = Parser.$fShowPDecl
instance GHC.Show.Show [Parser.PExpr] = Parser.$fShowPExpr
instance GHC.Show.Show [Parser.PFType] = Parser.$fShowPFType
instance GHC.Show.Show [Parser.PGuards] = Parser.$fShowPGuards
instance GHC.Show.Show [Parser.PState] = Parser.$fShowPState
instance GHC.Show.Show [Parser.Pat] = Parser.$fShowPat
"SPEC/Parser $fMonadStateT_$c>>= @ (Either String) _" [ALWAYS] forall @ s
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    (Data.Either.Either
                                                                                       GHC.Base.String))
  Control.Monad.Trans.State.Lazy.$fMonadStateT_$c>>= @ (Data.Either.Either
                                                          GHC.Base.String)
                                                     @ s
                                                     $dMonad
  = Parser.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

