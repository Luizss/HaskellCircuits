#ifndef MAINFUNC_H_
#define MAINFUNC_H_

#include "systemc.h"
#include "const_dec_12_.h"
#include "const_dec_01_.h"
#include "g.h"
#include "equ1_.h"


SC_MODULE(mainFunc) {
  sc_fifo_in<sc_lv<32> > s;

  sc_fifo_out<sc_lv<32> > out;

  sc_fifo<sc_lv<32> > const_dec_01_out__equ1_in2;

  const_dec_12_ const_dec_11;
  const_dec_01_ const_dec_01;
  g g1;
  equ1_ equ1;

  sc_lv<32> s__now__1;
  sc_fifo<sc_lv<32> > __fifo__main__cond__1__in__now__1__s;
  sc_lv<1> __fifo__main__cond__1__out__aux;
  sc_fifo<sc_lv<1> > __fifo__main__cond__1__out;
  sc_lv<1> __fifo__main__cond__2__out__aux;
  sc_fifo<sc_lv<1> > __fifo__main__cond__2__out;
  sc_lv<2> cond;
  sc_lv<32> s__copy__val;
  sc_lv<32> s__destroy;
  sc_fifo<sc_lv<32> > __fifo__main__rec__expr__2__1__in__s;
    sc_fifo<sc_lv<32> > __fifo__main__rec__expr__2__1__out;

    std::vector<sc_lv<32> > s__savev;
    sc_lv<32> s__savev__val;
    
  void proc();
 SC_CTOR(mainFunc) : const_dec_11("const_dec_11"), const_dec_01("const_dec_01"), g1("g1"), equ1("equ1") {

    g1.s(__fifo__main__rec__expr__2__1__in__s);
    g1.out(__fifo__main__rec__expr__2__1__out);
    const_dec_11.out(__fifo__main__cond__2__out);
    const_dec_01.out(const_dec_01_out__equ1_in2);
    equ1.in2(const_dec_01_out__equ1_in2);

    equ1.in1(__fifo__main__cond__1__in__now__1__s);
    equ1.out(__fifo__main__cond__1__out);

    SC_THREAD(proc);
  }
};
void mainFunc::proc() {
  
  while(true) {

    cout << "A" << endl;
    s__savev.push_back(s.read());
    while (s.nb_read(s__savev__val)) {
      cout << "A2" << endl;
      s__savev.push_back(s__savev__val);
    }

    s__now__1 = *(s__savev.begin());
    //s__now__1 = s.read();
    
    //blob 1
    
    int i = 0;
    while (true) {
      i++;
      cout << "B" << endl;
      //s__now__1 = s__now__1;
      cout << "B1 " << s__now__1 << endl;
      __fifo__main__cond__1__in__now__1__s.write(s__now__1);
      __fifo__main__cond__1__out__aux = __fifo__main__cond__1__out.read();
      __fifo__main__cond__2__out__aux = __fifo__main__cond__2__out.read();
      cond = (__fifo__main__cond__2__out__aux, __fifo__main__cond__1__out__aux);
      
      if (i==5) {

	cout << "C" << endl;
	for(std::vector<sc_lv<32> >::iterator s__savev__it_=s__savev.begin(); s__savev__it_ != s__savev.end(); ++s__savev__it_) {
	  cout << "C1" << endl;
	  out.write(*s__savev__it_);
	}

	while(s.nb_read(s__destroy)) {}

	break;

      } else {

	cout << "D" << endl;
	for(std::vector<sc_lv<32> >::iterator s__savev__it_=s__savev.begin(); s__savev__it_ != s__savev.end(); s__savev__it_=s__savev__it_+1) {
	  cout << "D1 " << *s__savev__it_ << endl;
	  __fifo__main__rec__expr__2__1__in__s.write(*s__savev__it_);
	}
	
	//blob 2
	s__savev.clear();
	s__savev.push_back(__fifo__main__rec__expr__2__1__out.read());
	cout << "D2" << endl;
	while (__fifo__main__rec__expr__2__1__out.nb_read(s__savev__val)) {
	  cout << "D3" << endl;
	  s__savev.push_back(s__savev__val);
	}
	//blob 3

      }

    }

  }
}

#endif
